{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz'; // Replace with your actual app password\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 10\n        });\n        console.log('Received data:', data); // Log received data\n\n        // Check if data.feed is an array before mapping\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => ({\n            date: new Date(item.post.record.createdAt).toLocaleString('en-US', {\n              timeZone: 'America/New_York',\n              // Adjust to your timezone\n              dateStyle: 'long',\n              timeStyle: 'long'\n            }),\n            text: item.post.record.text,\n            images: item.post.embed.images.map(image => ({\n              thumb: image.thumb,\n              fullsize: image.fullsize,\n              alt: image.alt\n            }))\n          }));\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", post.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", post.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.images.map((image, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.thumb,\n            alt: image.alt\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = BlueskySocial;\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","console","log","Array","isArray","feed","postsData","map","item","date","Date","post","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","images","embed","image","thumb","fullsize","alt","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","index","i","src","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz'; // Replace with your actual app password\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 10,\r\n        });\r\n\r\n        console.log('Received data:', data); // Log received data\r\n\r\n        // Check if data.feed is an array before mapping\r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => ({\r\n            date: new Date(item.post.record.createdAt).toLocaleString('en-US', {\r\n              timeZone: 'America/New_York', // Adjust to your timezone\r\n              dateStyle: 'long',\r\n              timeStyle: 'long'\r\n            }),\r\n            text: item.post.record.text,\r\n            images: item.post.embed.images.map(image => ({\r\n              thumb: image.thumb,\r\n              fullsize: image.fullsize,\r\n              alt: image.alt\r\n            }))\r\n          }));\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest Posts</h1>\r\n      <ul>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <p>Date: {post.date}</p>\r\n            <p>Text: {post.text}</p>\r\n            <div>\r\n              {post.images.map((image, i) => (\r\n                <img key={i} src={image.thumb} alt={image.alt} />\r\n              ))}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlueskySocial;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}