{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 1\n        });\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => {\n            var _post$embed, _post$embed$media;\n            const post = item.post;\n            const {\n              likeCount,\n              replyCount,\n              repostCount\n            } = post;\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\n            const images = ((_post$embed = post.embed) === null || _post$embed === void 0 ? void 0 : (_post$embed$media = _post$embed.media) === null || _post$embed$media === void 0 ? void 0 : _post$embed$media.images) || [];\n            console.log(post);\n            return {\n              author: post.author,\n              date: new Date(post.record.createdAt).toLocaleString('en-US', {\n                timeZone: 'America/New_York',\n                dateStyle: 'long',\n                timeStyle: 'long'\n              }),\n              text: post.record.text,\n              embed: post.embed,\n              bangerScore: bangerScore,\n              images: images\n            };\n          });\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log('Posts State Updated:', posts);\n    posts.forEach((post, index) => {\n      console.log(`Post [${index}]:`, post);\n      if (post.embed && post.embed.record && post.embed.record.record) {\n        console.log(`Quoted Post Data [${index}]:`, post.embed.record.record);\n        if (post.embed.record.record.embed && post.embed.record.record.embed.images) {\n          console.log(`Quoted Post Images [${index}]:`, post.embed.record.record.embed.images);\n        }\n      }\n    });\n  }, [posts]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Skeet On Bsky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"latest-skeet\",\n      children: posts.map((post, index) => {\n        var _post$embed2, _post$embed$external, _post$embed$external2, _post$embed$media2, _post$embed$media2$ex, _post$embed$media3, _post$embed$media3$ex, _post$embed$external3, _post$embed$media4, _post$embed$media4$ex, _post$embed$external4, _post$embed$media5, _post$embed$media5$ex, _post$embed$external5, _post$embed$media6, _post$embed$media6$ex, _post$embed$record$au, _post$embed$record$au2, _post$embed$record$au3, _post$embed$record$au4, _post$embed$record$va, _post$embed$record$em, _post$embed$record$em2, _post$embed3, _post$embed3$record, _post$embed3$record$v, _post$embed3$record$v2, _post$embed3$record$v3, _post$embed4, _post$embed4$record, _post$embed4$record$e, _post$embed4$record$e2, _post$embed4$record$e3, _post$embed4$record$e4;\n        // Post object rendering logic ...\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"skeet-date\",\n              children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://bsky.app/profile/${post.author.handle}`,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: [\"@\", post.author.handle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 54\n              }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n                children: post.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 175\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeet-text\",\n            style: {\n              whiteSpace: 'pre-line'\n            },\n            children: [parseText(post.text), ((_post$embed2 = post.embed) === null || _post$embed2 === void 0 ? void 0 : _post$embed2.images) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: post.embed.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"skeet-img-file\",\n                src: image.fullsize,\n                alt: image.alt || 'Post image',\n                loading: \"lazy\"\n              }, imgIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), post.embed && post.embed.media && post.embed.media.external && !(post.embed.media.external.uri.includes('youtu.be') || post.embed.media.external.uri.includes('youtube.com')) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"webcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"webcard-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"web-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), post.embed && (((_post$embed$external = post.embed.external) === null || _post$embed$external === void 0 ? void 0 : _post$embed$external.uri.includes('youtu.be')) || ((_post$embed$external2 = post.embed.external) === null || _post$embed$external2 === void 0 ? void 0 : _post$embed$external2.uri.includes('youtube.com')) || ((_post$embed$media2 = post.embed.media) === null || _post$embed$media2 === void 0 ? void 0 : (_post$embed$media2$ex = _post$embed$media2.external) === null || _post$embed$media2$ex === void 0 ? void 0 : _post$embed$media2$ex.uri.includes('youtu.be')) || ((_post$embed$media3 = post.embed.media) === null || _post$embed$media3 === void 0 ? void 0 : (_post$embed$media3$ex = _post$embed$media3.external) === null || _post$embed$media3$ex === void 0 ? void 0 : _post$embed$media3$ex.uri.includes('youtube.com'))) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"youtube\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-youtube\",\n              children: /*#__PURE__*/_jsxDEV(YouTube, {\n                videoId: getPostYoutubeId(((_post$embed$external3 = post.embed.external) === null || _post$embed$external3 === void 0 ? void 0 : _post$embed$external3.uri) || ((_post$embed$media4 = post.embed.media) === null || _post$embed$media4 === void 0 ? void 0 : (_post$embed$media4$ex = _post$embed$media4.external) === null || _post$embed$media4$ex === void 0 ? void 0 : _post$embed$media4$ex.uri))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube-deets\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: ((_post$embed$external4 = post.embed.external) === null || _post$embed$external4 === void 0 ? void 0 : _post$embed$external4.title) || ((_post$embed$media5 = post.embed.media) === null || _post$embed$media5 === void 0 ? void 0 : (_post$embed$media5$ex = _post$embed$media5.external) === null || _post$embed$media5$ex === void 0 ? void 0 : _post$embed$media5$ex.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"skeet-metatext\",\n                children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                  text: ((_post$embed$external5 = post.embed.external) === null || _post$embed$external5 === void 0 ? void 0 : _post$embed$external5.description) || ((_post$embed$media6 = post.embed.media) === null || _post$embed$media6 === void 0 ? void 0 : (_post$embed$media6$ex = _post$embed$media6.external) === null || _post$embed$media6$ex === void 0 ? void 0 : _post$embed$media6$ex.description)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), post.embed && post.embed.record && (post.embed.record.author || post.embed.record.record.author) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quote-reskeet-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reskeet-user\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"reskeet-pfp\",\n                src: ((_post$embed$record$au = post.embed.record.author) === null || _post$embed$record$au === void 0 ? void 0 : _post$embed$record$au.avatar) || post.embed.record.record.author.avatar,\n                alt: `LOOK IT'S ${((_post$embed$record$au2 = post.embed.record.author) === null || _post$embed$record$au2 === void 0 ? void 0 : _post$embed$record$au2.handle) || post.embed.record.record.author.handle}'S STUPID PFP. MySPACE WAS A PSyOP.`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Reskeeting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"reskeet-handle\",\n                  href: `https://bsky.app/profile/${((_post$embed$record$au3 = post.embed.record.author) === null || _post$embed$record$au3 === void 0 ? void 0 : _post$embed$record$au3.handle) || post.embed.record.record.author.handle}`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: [\"@\", ((_post$embed$record$au4 = post.embed.record.author) === null || _post$embed$record$au4 === void 0 ? void 0 : _post$embed$record$au4.handle) || post.embed.record.record.author.handle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quoted-post-text\",\n              children: ((_post$embed$record$va = post.embed.record.value) === null || _post$embed$record$va === void 0 ? void 0 : _post$embed$record$va.text) || post.embed.record.record.value.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), post.embed.record.embeds && post.embed.record.embeds[0].images || post.embed.record.record.embed && post.embed.record.record.embed.images ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: (((_post$embed$record$em = post.embed.record.embeds) === null || _post$embed$record$em === void 0 ? void 0 : (_post$embed$record$em2 = _post$embed$record$em[0]) === null || _post$embed$record$em2 === void 0 ? void 0 : _post$embed$record$em2.images) || post.embed.record.record.embed.images).map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"skeet-img-file\",\n                  src: image.fullsize,\n                  alt: image.alt || 'Quoted post image',\n                  loading: \"lazy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: [\"//ALT TEXT: \", image.alt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, imgIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this) : null, ((_post$embed3 = post.embed) === null || _post$embed3 === void 0 ? void 0 : (_post$embed3$record = _post$embed3.record) === null || _post$embed3$record === void 0 ? void 0 : (_post$embed3$record$v = _post$embed3$record.value) === null || _post$embed3$record$v === void 0 ? void 0 : (_post$embed3$record$v2 = _post$embed3$record$v.embed) === null || _post$embed3$record$v2 === void 0 ? void 0 : (_post$embed3$record$v3 = _post$embed3$record$v2.external) === null || _post$embed3$record$v3 === void 0 ? void 0 : _post$embed3$record$v3.uri) && (post.embed.record.value.embed.external.uri.includes('youtu.be') || post.embed.record.value.embed.external.uri.includes('youtube.com')) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-youtube\",\n                children: /*#__PURE__*/_jsxDEV(YouTube, {\n                  videoId: getPostYoutubeId(post.embed.record.value.embed.external.uri)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.record.value.embed.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.record.value.embed.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), ((_post$embed4 = post.embed) === null || _post$embed4 === void 0 ? void 0 : (_post$embed4$record = _post$embed4.record) === null || _post$embed4$record === void 0 ? void 0 : (_post$embed4$record$e = _post$embed4$record.embeds) === null || _post$embed4$record$e === void 0 ? void 0 : (_post$embed4$record$e2 = _post$embed4$record$e[0]) === null || _post$embed4$record$e2 === void 0 ? void 0 : (_post$embed4$record$e3 = _post$embed4$record$e2.media) === null || _post$embed4$record$e3 === void 0 ? void 0 : (_post$embed4$record$e4 = _post$embed4$record$e3.external) === null || _post$embed4$record$e4 === void 0 ? void 0 : _post$embed4$record$e4.uri) && (post.embed.record.embeds[0].media.external.uri.includes('youtu.be') || post.embed.record.embeds[0].media.external.uri.includes('youtube.com')) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-youtube\",\n                children: /*#__PURE__*/_jsxDEV(YouTube, {\n                  videoId: getPostYoutubeId(post.embed.record.embeds[0].media.external.uri)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.record.embeds[0].media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.record.embeds[0].media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"skeet-banger-score\",\n              children: [\"Banger Score:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"glow\",\n                children: post.bangerScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"JFzKEg8tC++VVrnFduep2nCQEBg=\");\n_c = BlueskySocial;\nconst parseText = text => {\n  if (!text) return ''; // Return an empty string if text is undefined\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\n  return text.split(usernameRegex).map((part, index) => {\n    if (index % 2 === 0) {\n      return part; // Normal text\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://bsky.app/profile/${part}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [\"@\", part]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 14\n      }, this); // Link to user profile\n    }\n  });\n};\nfunction getPostYoutubeId(url) {\n  let id = '';\n  if (url.includes('youtube.com')) {\n    // Extract the video ID from the query parameter 'v'\n    const urlParams = new URLSearchParams(new URL(url).search);\n    id = urlParams.get('v');\n  } else if (url.includes('youtu.be')) {\n    // Extract the video ID from the path\n    id = url.split('youtu.be/')[1];\n    // Handle potential URL parameters by splitting on '?' and taking the first part\n    id = id.split('?')[0];\n  }\n  return id;\n}\nfunction formatTextWithLinks(text) {\n  if (text === undefined) return ''; // Add this line to handle undefined inputs\n  // Regular expression to match URLs\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  // Replace URLs with a line break followed by the URL\n  return text.replace(urlRegex, '<br />$1');\n}\nfunction RenderTextWithLinks({\n  text\n}) {\n  // Ensure text is treated as a string, even if it's undefined\n  const formattedText = formatTextWithLinks(text || '');\n  // Split the formatted text by <br /> to get an array of strings\n  const parts = formattedText.split('<br />');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map((part, index) =>\n    /*#__PURE__*/\n    // Render each part, and if it's not the first part, add a <br /> before it\n    _jsxDEV(React.Fragment, {\n      children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }, this), part]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RenderTextWithLinks;\nexport default BlueskySocial;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlueskySocial\");\n$RefreshReg$(_c2, \"RenderTextWithLinks\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","YouTube","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","Array","isArray","feed","postsData","map","item","_post$embed","_post$embed$media","post","likeCount","replyCount","repostCount","bangerScore","images","embed","media","console","log","author","date","Date","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","Error","forEach","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_post$embed2","_post$embed$external","_post$embed$external2","_post$embed$media2","_post$embed$media2$ex","_post$embed$media3","_post$embed$media3$ex","_post$embed$external3","_post$embed$media4","_post$embed$media4$ex","_post$embed$external4","_post$embed$media5","_post$embed$media5$ex","_post$embed$external5","_post$embed$media6","_post$embed$media6$ex","_post$embed$record$au","_post$embed$record$au2","_post$embed$record$au3","_post$embed$record$au4","_post$embed$record$va","_post$embed$record$em","_post$embed$record$em2","_post$embed3","_post$embed3$record","_post$embed3$record$v","_post$embed3$record$v2","_post$embed3$record$v3","_post$embed4","_post$embed4$record","_post$embed4$record$e","_post$embed4$record$e2","_post$embed4$record$e3","_post$embed4$record$e4","href","target","rel","style","whiteSpace","parseText","image","imgIndex","src","fullsize","alt","loading","external","uri","includes","title","RenderTextWithLinks","description","videoId","getPostYoutubeId","avatar","value","embeds","_c","usernameRegex","split","part","url","id","urlParams","URLSearchParams","URL","search","get","formatTextWithLinks","undefined","urlRegex","replace","formattedText","parts","Fragment","_c2","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 1,\r\n        });\r\n\r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => {\r\n            const post = item.post;\r\n            const { likeCount, replyCount, repostCount } = post;\r\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\r\n            const images = post.embed?.media?.images || [];\r\n            console.log(post)\r\n            return {\r\n              author: post.author,\r\n              date: new Date(post.record.createdAt).toLocaleString('en-US', { timeZone: 'America/New_York', dateStyle: 'long', timeStyle: 'long' }),\r\n              text: post.record.text,\r\n              embed: post.embed,\r\n              bangerScore: bangerScore,\r\n              images: images\r\n            };\r\n          });\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Posts State Updated:', posts);\r\n    posts.forEach((post, index) => {\r\n      console.log(`Post [${index}]:`, post);\r\n      if (post.embed && post.embed.record && post.embed.record.record) {\r\n        console.log(`Quoted Post Data [${index}]:`, post.embed.record.record);\r\n        if (post.embed.record.record.embed && post.embed.record.record.embed.images) {\r\n          console.log(`Quoted Post Images [${index}]:`, post.embed.record.record.embed.images);\r\n        }\r\n      }\r\n    });\r\n  }, [posts]);\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <h2>Latest Skeet On Bsky</h2>\r\n      <ul className='latest-skeet'>\r\n      {posts.map((post, index) => {\r\n        // Post object rendering logic ...\r\n        return (\r\n          <li key={index}>\r\n            {/* Rendering user's info (Rev, unless he reskeets someone else) and text*/}\r\n            <div><p className='skeet-date'>Posted by <a href={`https://bsky.app/profile/${post.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{post.author.handle}</a> on <u>{post.date}</u></p></div>\r\n            <div className='skeet-text' style={{ whiteSpace: 'pre-line' }}>\r\n              {parseText(post.text)}\r\n\r\n              {/*Getting user images, if user has any*/}\r\n              {post.embed?.images && (\r\n                  <div className=\"skeet-image-group\">\r\n                    {post.embed.images.map((image, imgIndex) => (\r\n                      <img\r\n                        key={imgIndex}\r\n                        className=\"skeet-img-file\"\r\n                        src={image.fullsize}\r\n                        alt={image.alt || 'Post image'}\r\n                        loading=\"lazy\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n              {/* Check and embed a non-YouTube website card */}\r\n              {post.embed && post.embed.media && post.embed.media.external && !(post.embed.media.external.uri.includes('youtu.be') || post.embed.media.external.uri.includes('youtube.com')) && (\r\n                <div className='webcard'>\r\n                  <div className='webcard-img'>\r\n                   \r\n                  </div>\r\n                  <div className='web-deets'>\r\n                    <h3>{post.embed.media.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.media.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n              {/* Check and embed user's Youtube video and info, if any */}\r\n              {post.embed && (post.embed.external?.uri.includes('youtu.be') || post.embed.external?.uri.includes('youtube.com') || post.embed.media?.external?.uri.includes('youtu.be') || post.embed.media?.external?.uri.includes('youtube.com')) && (\r\n                <div className='youtube'>\r\n                  <div className='skeet-youtube'>\r\n                    <YouTube videoId={getPostYoutubeId(post.embed.external?.uri || post.embed.media?.external?.uri)} />\r\n                  </div>\r\n                  <div className='youtube-deets'>\r\n                    <h3>{post.embed.external?.title || post.embed.media?.external?.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.external?.description || post.embed.media?.external?.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            \r\n            \r\n            {/* Quote-Reskeets (Quote Reposts) */}\r\n            {post.embed && post.embed.record && (post.embed.record.author || post.embed.record.record.author) && (\r\n              <div className=\"quote-reskeet-box\">\r\n                <div className=\"reskeet-user\">\r\n                  <img\r\n                    className=\"reskeet-pfp\"\r\n                    src={post.embed.record.author?.avatar || post.embed.record.record.author.avatar}\r\n                    alt={`LOOK IT'S ${post.embed.record.author?.handle || post.embed.record.record.author.handle}'S STUPID PFP. MySPACE WAS A PSyOP.`}\r\n                  />\r\n                  <div>\r\n                    Reskeeting...\r\n                    <br />\r\n                    <a\r\n                      className=\"reskeet-handle\"\r\n                      href={`https://bsky.app/profile/${post.embed.record.author?.handle || post.embed.record.record.author.handle}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      @{post.embed.record.author?.handle || post.embed.record.record.author.handle}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Render quoted post text */}\r\n                <div className=\"quoted-post-text\">\r\n                  {post.embed.record.value?.text || post.embed.record.record.value.text}\r\n                </div>\r\n\r\n              {/* Getting Quote-Reskeet images, if the other user has any */}  \r\n              {(post.embed.record.embeds && post.embed.record.embeds[0].images) || (post.embed.record.record.embed && post.embed.record.record.embed.images) ? (\r\n                  <div className=\"skeet-image-group\">\r\n                  {(post.embed.record.embeds?.[0]?.images || post.embed.record.record.embed.images).map((image, imgIndex) => (\r\n                    <div key={imgIndex}>\r\n                      <img\r\n                      className=\"skeet-img-file\"\r\n                      src={image.fullsize}\r\n                      alt={image.alt || 'Quoted post image'}\r\n                      loading=\"lazy\"\r\n                    /><br />\r\n                    <p className='skeet-metatext'>//ALT TEXT: {image.alt}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                ) : null}\r\n                \r\n              {/* Check and render Quoted User's Youtube video, if any */}\r\n              {post.embed?.record?.value?.embed?.external?.uri && \r\n              (post.embed.record.value.embed.external.uri.includes('youtu.be') || post.embed.record.value.embed.external.uri.includes('youtube.com')) && (\r\n                <div className='youtube'>\r\n                  <div className='skeet-youtube'>\r\n                    <YouTube videoId={getPostYoutubeId(post.embed.record.value.embed.external.uri)} />\r\n                  </div>\r\n                  <div className='youtube-deets'>\r\n                    <h3>{post.embed.record.value.embed.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.record.value.embed.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* In case the file structure for quoted Youtube videos are different... */}\r\n              {post.embed?.record?.embeds?.[0]?.media?.external?.uri && \r\n              (post.embed.record.embeds[0].media.external.uri.includes('youtu.be') || post.embed.record.embeds[0].media.external.uri.includes('youtube.com')) && (\r\n                <div className='youtube'>\r\n                  <div className='skeet-youtube'>\r\n                    <YouTube videoId={getPostYoutubeId(post.embed.record.embeds[0].media.external.uri)} />\r\n                  </div>\r\n                  <div className='youtube-deets'>\r\n                    <h3>{post.embed.record.embeds[0].media.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.record.embeds[0].media.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              </div> \r\n            )}\r\n            <div>\r\n              <h4 className='skeet-banger-score'>Banger Score:<br/> <span className='glow'>{post.bangerScore}</span></h4>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst parseText = (text) => {\r\n  if (!text) return ''; // Return an empty string if text is undefined\r\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\r\n\r\n  return text.split(usernameRegex).map((part, index) => {\r\n    if (index % 2 === 0) {\r\n      return part; // Normal text\r\n    } else {\r\n      return <a href={`https://bsky.app/profile/${part}`} target=\"_blank\" rel=\"noreferrer\">@{part}</a>; // Link to user profile\r\n    }\r\n  });\r\n};\r\n\r\nfunction getPostYoutubeId(url) {\r\n  let id = '';\r\n  if (url.includes('youtube.com')) {\r\n    // Extract the video ID from the query parameter 'v'\r\n    const urlParams = new URLSearchParams(new URL(url).search);\r\n    id = urlParams.get('v');\r\n  } else if (url.includes('youtu.be')) {\r\n    // Extract the video ID from the path\r\n    id = url.split('youtu.be/')[1];\r\n    // Handle potential URL parameters by splitting on '?' and taking the first part\r\n    id = id.split('?')[0];\r\n  }\r\n  return id;\r\n}\r\n\r\nfunction formatTextWithLinks(text) {\r\n  if (text === undefined) return ''; // Add this line to handle undefined inputs\r\n  // Regular expression to match URLs\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  // Replace URLs with a line break followed by the URL\r\n  return text.replace(urlRegex, '<br />$1');\r\n}\r\n\r\nfunction RenderTextWithLinks({ text }) {\r\n  // Ensure text is treated as a string, even if it's undefined\r\n  const formattedText = formatTextWithLinks(text || '');\r\n  // Split the formatted text by <br /> to get an array of strings\r\n  const parts = formattedText.split('<br />');\r\n\r\n  return (\r\n    <div>\r\n      {parts.map((part, index) => (\r\n        // Render each part, and if it's not the first part, add a <br /> before it\r\n        <React.Fragment key={index}>\r\n          {index !== 0 && <br />}\r\n          {part}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlueskySocial;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}