{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com'; // CHANGE THIS. Use your bsky handle. Should be YOURNAME.bsky.social, unless you have a custom domain like me.\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz'; // CHANGE THIS. It's STRONGLY recommended that you use an App Password created through the Bsky App rather than your own.\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 1 // You can set the limit of posts here, up to 100.\n        });\n        console.log('Received data:', data); // Log received data\n\n        // Check if data.feed is an array before mapping\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => {\n            var _item$post$embed, _item$post$embed$imag;\n            // Here's how a Banger Score is tallied: Likes = 200pts, Comments = 300pts, Reskeets = 1000pts\n            const bangerScoreForPost = item.post.likeCount * 200 + item.post.replyCount * 300 + item.post.repostCount * 1000;\n            return {\n              date: new Date(item.post.record.createdAt).toLocaleString('en-US', {\n                timeZone: 'America/New_York',\n                // CHANGE THIS: Adjust to your timezone\n                dateStyle: 'long',\n                timeStyle: 'long'\n              }),\n              text: item.post.record.text,\n              bangerScore: bangerScoreForPost,\n              images: ((_item$post$embed = item.post.embed) === null || _item$post$embed === void 0 ? void 0 : (_item$post$embed$imag = _item$post$embed.images) === null || _item$post$embed$imag === void 0 ? void 0 : _item$post$embed$imag.map(image => ({\n                thumb: image.thumb,\n                fullsize: image.fullsize,\n                alt: image.alt\n              }))) || [] // Handle cases where images are not present\n            };\n          });\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Skeet To Bsky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"latest-skeet\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"skeet-date\",\n          children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://bsky.app/profile/reverendcrush.com\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"@reverendcrush.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 49\n          }, this), \" to \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://bsky.app/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"bsky.app\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 161\n          }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 238\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skeet-text\",\n          style: {\n            whiteSpace: 'pre-line'\n          },\n          children: post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skeet-image-group\",\n          children: post.images.map((image, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeet-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"skeet-img-file\",\n              src: image.thumb,\n              alt: image.alt\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 54\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Banger Score: \", post.bangerScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = BlueskySocial;\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","console","log","Array","isArray","feed","postsData","map","item","_item$post$embed","_item$post$embed$imag","bangerScoreForPost","post","likeCount","replyCount","repostCount","date","Date","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","bangerScore","images","embed","image","thumb","fullsize","alt","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","href","target","rel","style","whiteSpace","i","src","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com'; // CHANGE THIS. Use your bsky handle. Should be YOURNAME.bsky.social, unless you have a custom domain like me.\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz'; // CHANGE THIS. It's STRONGLY recommended that you use an App Password created through the Bsky App rather than your own.\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 1, // You can set the limit of posts here, up to 100.\r\n        });\r\n\r\n        console.log('Received data:', data); // Log received data\r\n\r\n        // Check if data.feed is an array before mapping\r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => {\r\n            // Here's how a Banger Score is tallied: Likes = 200pts, Comments = 300pts, Reskeets = 1000pts\r\n            const bangerScoreForPost = (item.post.likeCount * 200) + (item.post.replyCount * 300) + (item.post.repostCount * 1000);\r\n\r\n            return {\r\n              date: new Date(item.post.record.createdAt).toLocaleString('en-US', {\r\n                timeZone: 'America/New_York', // CHANGE THIS: Adjust to your timezone\r\n                dateStyle: 'long',\r\n                timeStyle: 'long'\r\n              }),\r\n              text: item.post.record.text,\r\n              bangerScore: bangerScoreForPost,\r\n              images: item.post.embed?.images?.map(image => ({\r\n                thumb: image.thumb,\r\n                fullsize: image.fullsize,\r\n                alt: image.alt\r\n              })) || [] // Handle cases where images are not present\r\n            };\r\n          });\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <h2>Latest Skeet To Bsky</h2>\r\n      <ul className='latest-skeet'>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <p className='skeet-date'>Posted by <a href='https://bsky.app/profile/reverendcrush.com' target=\"_blank\" rel=\"noreferrer\">@reverendcrush.com</a> to <a href='https://bsky.app/' target=\"_blank\" rel=\"noreferrer\">bsky.app</a> on <u>{post.date}</u></p>\r\n            <div className='skeet-text' style={{ whiteSpace: 'pre-line' }}>{post.text}</div>\r\n            <div className='skeet-image-group'>\r\n              {post.images.map((image, i) => (\r\n                <div key={i} className=\"skeet-image\"><img className='skeet-img-file' key={i} src={image.thumb} alt={image.alt} /></div>\r\n              ))}\r\n            </div>\r\n            <h3>Banger Score: {post.bangerScore}</h3>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BlueskySocial;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}