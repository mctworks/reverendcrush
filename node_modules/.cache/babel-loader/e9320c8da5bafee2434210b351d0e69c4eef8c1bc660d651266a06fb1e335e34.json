{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport { MetaTags } from 'react-meta-tags';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'YOUR_HANDLE.bsky.social'; // Change this to your Bluesky handle\n  const APP_PASSWORD = 'YOUR_APP_PASSWORD'; // Change this to your App Password\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 1\n        });\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => {\n            const post = item.post;\n            const {\n              likeCount,\n              replyCount,\n              repostCount\n            } = post;\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\n            return {\n              author: post.author,\n              date: new Date(post.record.createdAt).toLocaleString('en-US', {\n                timeZone: 'America/New_York',\n                dateStyle: 'long',\n                timeStyle: 'long'\n              }),\n              text: post.record.text,\n              embed: post.embed,\n              bangerScore: bangerScore\n            };\n          });\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Bluesky Social\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Bluesky Social Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Skeet To Bsky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"latest-skeet\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"skeet-date\",\n          children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://bsky.app/profile/${post.author.handle}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: [\"@\", post.author.handle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }, this), \" to \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://bsky.app/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"bsky.app\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 170\n          }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 247\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skeet-text\",\n          style: {\n            whiteSpace: 'pre-line'\n          },\n          children: [parseText(post.text), post.embed && post.embed.external && post.embed.external.uri.includes('youtu.be') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: getPostYoutubeId(post.embed.external.uri)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.embed.external.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.embed.external.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), post.embed && post.embed.external && post.embed.external.thumb && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.embed.external.thumb,\n          alt: \"Image\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Skeet Banger Score: \", post.bangerScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = BlueskySocial;\nconst parseText = text => {\n  // Regular expression to find usernames\n  const usernameRegex = /@(\\w+\\.\\w+)/g;\n  return text.split(usernameRegex).map((part, index) => {\n    if (index % 2 === 0) {\n      return part; // Normal text\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://bsky.app/profile/${part}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [\"@\", part]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this); // Link to user profile\n    }\n  });\n};\nconst getPostYoutubeId = text => {\n  const matches = text.match(/youtu\\.be\\/([^?\\s]+)/);\n  return matches ? matches[1] : null;\n};\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","MetaTags","YouTube","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","Array","isArray","feed","postsData","map","item","post","likeCount","replyCount","repostCount","bangerScore","author","date","Date","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","embed","console","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","content","index","href","target","rel","style","whiteSpace","parseText","external","uri","includes","videoId","getPostYoutubeId","title","description","thumb","src","alt","maxWidth","maxHeight","_c","usernameRegex","split","part","matches","match","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\nimport { MetaTags } from 'react-meta-tags';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'YOUR_HANDLE.bsky.social'; // Change this to your Bluesky handle\r\n  const APP_PASSWORD = 'YOUR_APP_PASSWORD'; // Change this to your App Password\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 1,\r\n        });\r\n\r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => {\r\n            const post = item.post;\r\n            const { likeCount, replyCount, repostCount } = post;\r\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\r\n\r\n            return {\r\n              author: post.author,\r\n              date: new Date(post.record.createdAt).toLocaleString('en-US', { timeZone: 'America/New_York', dateStyle: 'long', timeStyle: 'long' }),\r\n              text: post.record.text,\r\n              embed: post.embed,\r\n              bangerScore: bangerScore\r\n            };\r\n          });\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <MetaTags>\r\n        <title>Bluesky Social</title>\r\n        <meta name=\"description\" content=\"Bluesky Social Feed\" />\r\n      </MetaTags>\r\n      <h2>Latest Skeet To Bsky</h2>\r\n      <ul className='latest-skeet'>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <p className='skeet-date'>Posted by <a href={`https://bsky.app/profile/${post.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{post.author.handle}</a> to <a href='https://bsky.app/' target=\"_blank\" rel=\"noreferrer\">bsky.app</a> on <u>{post.date}</u></p>\r\n            <div className='skeet-text' style={{ whiteSpace: 'pre-line' }}>\r\n              {parseText(post.text)}\r\n              {post.embed && post.embed.external && post.embed.external.uri.includes('youtu.be') && (\r\n                <div>\r\n                  <YouTube videoId={getPostYoutubeId(post.embed.external.uri)} />\r\n                  <h3>{post.embed.external.title}</h3>\r\n                  <p>{post.embed.external.description}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {post.embed && post.embed.external && post.embed.external.thumb && (\r\n              <img src={post.embed.external.thumb} alt=\"Image\" style={{ maxWidth: '100%', maxHeight: '200px' }} />\r\n            )}\r\n            <h3>Skeet Banger Score: {post.bangerScore}</h3>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst parseText = (text) => {\r\n  // Regular expression to find usernames\r\n  const usernameRegex = /@(\\w+\\.\\w+)/g;\r\n  return text.split(usernameRegex).map((part, index) => {\r\n    if (index % 2 === 0) {\r\n      return part; // Normal text\r\n    } else {\r\n      return <a href={`https://bsky.app/profile/${part}`} target=\"_blank\" rel=\"noreferrer\">@{part}</a>; // Link to user profile\r\n    }\r\n  });\r\n};\r\n\r\nconst getPostYoutubeId = (text) => {\r\n  const matches = text.match(/youtu\\.be\\/([^?\\s]+)/);\r\n  return matches ? matches[1] : null;\r\n};\r\n\r\nexport default BlueskySocial;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAG,yBAAyB,CAAC,CAAC;EAC1C,MAAMC,YAAY,GAAG,mBAAmB,CAAC,CAAC;EAC1C,MAAMC,WAAW,GAAG,qBAAqB;EAEzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAegB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,KAAK,GAAG,IAAIf,SAAS,CAAC;UAAEgB,OAAO,EAAEP;QAAY,CAAC,CAAC;QACrD,MAAM;UAAEQ,IAAI,EAAE;YAAEC;UAAI;QAAE,CAAC,GAAG,MAAMH,KAAK,CAACI,aAAa,CAAC;UAAEC,MAAM,EAAEb;QAAO,CAAC,CAAC;QACvE,MAAMQ,KAAK,CAACM,KAAK,CAAC;UAAEC,UAAU,EAAEJ,GAAG;UAAEK,QAAQ,EAAEf;QAAa,CAAC,CAAC;QAC9D,MAAM;UAAES;QAAK,CAAC,GAAG,MAAMF,KAAK,CAACS,aAAa,CAAC;UACzCC,KAAK,EAAEP,GAAG;UACVQ,MAAM,EAAE,0BAA0B;UAClCC,KAAK,EAAE;QACT,CAAC,CAAC;QAEF,IAAIC,KAAK,CAACC,OAAO,CAACZ,IAAI,CAACa,IAAI,CAAC,EAAE;UAC5B,MAAMC,SAAS,GAAGd,IAAI,CAACa,IAAI,CAACE,GAAG,CAACC,IAAI,IAAI;YACtC,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI;YACtB,MAAM;cAAEC,SAAS;cAAEC,UAAU;cAAEC;YAAY,CAAC,GAAGH,IAAI;YACnD,MAAMI,WAAW,GAAGH,SAAS,GAAG,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGC,WAAW,GAAG,IAAI;YAE3E,OAAO;cACLE,MAAM,EAAEL,IAAI,CAACK,MAAM;cACnBC,IAAI,EAAE,IAAIC,IAAI,CAACP,IAAI,CAACQ,MAAM,CAACC,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;gBAAEC,QAAQ,EAAE,kBAAkB;gBAAEC,SAAS,EAAE,MAAM;gBAAEC,SAAS,EAAE;cAAO,CAAC,CAAC;cACrIC,IAAI,EAAEd,IAAI,CAACQ,MAAM,CAACM,IAAI;cACtBC,KAAK,EAAEf,IAAI,CAACe,KAAK;cACjBX,WAAW,EAAEA;YACf,CAAC;UACH,CAAC,CAAC;UACF3B,QAAQ,CAACoB,SAAS,CAAC;QACrB,CAAC,MAAM;UACLmB,OAAO,CAACtC,KAAK,CAAC,2BAA2B,EAAEK,IAAI,CAACa,IAAI,CAAC;UACrD,MAAM,IAAIqB,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOvC,KAAK,EAAE;QACdsC,OAAO,CAACtC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,qBAAqB,CAAC;MACjC;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAKgD,SAAS,EAAC,sBAAsB;MAAAC,QAAA,GAAC,iBAAe,EAACzC,KAAK;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3E;EAEA,oBACErD,OAAA;IAASgD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC5BjD,OAAA,CAACH,QAAQ;MAAAoD,QAAA,gBACPjD,OAAA;QAAAiD,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BrD,OAAA;QAAMsD,IAAI,EAAC,aAAa;QAACC,OAAO,EAAC;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACXrD,OAAA;MAAAiD,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrD,OAAA;MAAIgD,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzB3C,KAAK,CAACsB,GAAG,CAAC,CAACE,IAAI,EAAE0B,KAAK,kBACrBxD,OAAA;QAAAiD,QAAA,gBACEjD,OAAA;UAAGgD,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,YAAU,eAAAjD,OAAA;YAAGyD,IAAI,EAAG,4BAA2B3B,IAAI,CAACK,MAAM,CAACnB,MAAO,EAAE;YAAC0C,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,YAAY;YAAAV,QAAA,GAAC,GAAC,EAACnB,IAAI,CAACK,MAAM,CAACnB,MAAM;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,QAAI,eAAArD,OAAA;YAAGyD,IAAI,EAAC,mBAAmB;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,YAAY;YAAAV,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,QAAI,eAAArD,OAAA;YAAAiD,QAAA,EAAInB,IAAI,CAACM;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChQrD,OAAA;UAAKgD,SAAS,EAAC,YAAY;UAACY,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAW,CAAE;UAAAZ,QAAA,GAC3Da,SAAS,CAAChC,IAAI,CAACc,IAAI,CAAC,EACpBd,IAAI,CAACe,KAAK,IAAIf,IAAI,CAACe,KAAK,CAACkB,QAAQ,IAAIjC,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACC,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC,iBAChFjE,OAAA;YAAAiD,QAAA,gBACEjD,OAAA,CAACF,OAAO;cAACoE,OAAO,EAAEC,gBAAgB,CAACrC,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACC,GAAG;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/DrD,OAAA;cAAAiD,QAAA,EAAKnB,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACK;YAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpCrD,OAAA;cAAAiD,QAAA,EAAInB,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACM;YAAW;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACLvB,IAAI,CAACe,KAAK,IAAIf,IAAI,CAACe,KAAK,CAACkB,QAAQ,IAAIjC,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACO,KAAK,iBAC7DtE,OAAA;UAAKuE,GAAG,EAAEzC,IAAI,CAACe,KAAK,CAACkB,QAAQ,CAACO,KAAM;UAACE,GAAG,EAAC,OAAO;UAACZ,KAAK,EAAE;YAAEa,QAAQ,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAQ;QAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACpG,eACDrD,OAAA;UAAAiD,QAAA,GAAI,sBAAoB,EAACnB,IAAI,CAACI,WAAW;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAfxCG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAACnD,EAAA,CAlFID,aAAa;AAAA0E,EAAA,GAAb1E,aAAa;AAoFnB,MAAM6D,SAAS,GAAIlB,IAAI,IAAK;EAC1B;EACA,MAAMgC,aAAa,GAAG,cAAc;EACpC,OAAOhC,IAAI,CAACiC,KAAK,CAACD,aAAa,CAAC,CAAChD,GAAG,CAAC,CAACkD,IAAI,EAAEtB,KAAK,KAAK;IACpD,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MACnB,OAAOsB,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACL,oBAAO9E,OAAA;QAAGyD,IAAI,EAAG,4BAA2BqB,IAAK,EAAE;QAACpB,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,YAAY;QAAAV,QAAA,GAAC,GAAC,EAAC6B,IAAI;MAAA;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC,CAAC;IACpG;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMc,gBAAgB,GAAIvB,IAAI,IAAK;EACjC,MAAMmC,OAAO,GAAGnC,IAAI,CAACoC,KAAK,CAAC,sBAAsB,CAAC;EAClD,OAAOD,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;AACpC,CAAC;AAED,eAAe9E,aAAa;AAAC,IAAA0E,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}