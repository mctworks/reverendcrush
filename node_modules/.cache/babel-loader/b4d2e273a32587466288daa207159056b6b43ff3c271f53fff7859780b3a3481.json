{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  var _currentPost$post$rec, _currentPost$post, _currentPost$post$rec2, _currentPost$post$emb, _currentPost$post$emb2, _currentPost$post$emb3, _currentPost$post$emb4, _currentPost$post$emb5, _currentPost$post2, _currentPost$post2$em, _currentPost$post2$em2, _currentPost$post$emb6, _currentPost$post$emb7, _currentPost$post$emb8, _currentPost$post$emb9;\n  const HANDLE = 'reverendcrush.com';\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [currentPostIndex, setCurrentPostIndex] = useState(0);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  async function fetchData() {\n    try {\n      const agent = new BskyAgent({\n        service: SERVICE_URL\n      });\n      const {\n        data: {\n          did\n        }\n      } = await agent.resolveHandle({\n        handle: HANDLE\n      });\n      await agent.login({\n        identifier: did,\n        password: APP_PASSWORD\n      });\n      const {\n        data\n      } = await agent.getAuthorFeed({\n        actor: did,\n        filter: 'posts_and_author_threads',\n        limit: 25\n      });\n      if (Array.isArray(data.feed)) {\n        setPosts(data.feed);\n      } else {\n        console.error('Invalid feed data format:', data.feed);\n        setError('Error fetching data');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data');\n    }\n  }\n  const handlePrevious = () => {\n    setCurrentPostIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const handleNext = () => {\n    setCurrentPostIndex(prevIndex => Math.min(prevIndex + 1, posts.length - 1));\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  if (posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: \"Loading skeets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  const currentPost = posts[currentPostIndex];\n  console.log('Current post:', currentPost); // Debugging log to inspect the currentPost object\n\n  if (!currentPost || !currentPost.post || !currentPost.post.record) {\n    console.error(\"Current post is undefined or missing the record property:\", currentPost);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: \"Error loading skeet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  const parseText = text => {\n    console.log('parseText called with:', text); // Debugging log\n    if (!text) return ''; // Return an empty string if text is undefined\n    const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\n    return text.split(usernameRegex).map((part, index) => {\n      if (index % 2 === 0) {\n        return part; // Normal text\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://bsky.app/profile/${part}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [\"@\", part]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this); // Link to user profile\n      }\n    });\n  };\n  const getPostYoutubeId = url => {\n    let id = '';\n    if (url.includes('youtube.com')) {\n      const urlParams = new URLSearchParams(new URL(url).search);\n      id = urlParams.get('v');\n    } else if (url.includes('youtu.be')) {\n      id = url.split('youtu.be/')[1];\n      id = id.split('?')[0];\n    }\n    return id;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-latest\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest from the Bsky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeet-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentPost.post.author.avatar,\n        alt: `${currentPost.post.author.name}'s avatar`,\n        className: \"author-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"skeet-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"skeet-author\",\n          href: \"https://bsky.app\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"The Bsky\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 47\n        }, this), \" by \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"skeet-author\",\n          href: `https://bsky.app/profile/${currentPost.post.author.handle}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [\"@\", currentPost.post.author.handle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 148\n        }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: new Date(currentPost.post.record.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 318\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeet-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: parseText((_currentPost$post$rec = currentPost === null || currentPost === void 0 ? void 0 : (_currentPost$post = currentPost.post) === null || _currentPost$post === void 0 ? void 0 : (_currentPost$post$rec2 = _currentPost$post.record) === null || _currentPost$post$rec2 === void 0 ? void 0 : _currentPost$post$rec2.text) !== null && _currentPost$post$rec !== void 0 ? _currentPost$post$rec : 'No text available')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), (_currentPost$post$emb = currentPost.post.embed) === null || _currentPost$post$emb === void 0 ? void 0 : (_currentPost$post$emb2 = _currentPost$post$emb.images) === null || _currentPost$post$emb2 === void 0 ? void 0 : _currentPost$post$emb2.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.fullsize,\n        alt: image.alt,\n        loading: \"lazy\",\n        className: \"skeet-img-file\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)), (_currentPost$post$emb3 = currentPost.post.embed) !== null && _currentPost$post$emb3 !== void 0 && _currentPost$post$emb3.external && (currentPost.post.embed.external.uri.includes('youtube.com') || (_currentPost$post$emb4 = currentPost.post.embed) !== null && _currentPost$post$emb4 !== void 0 && (_currentPost$post$emb5 = _currentPost$post$emb4.external) !== null && _currentPost$post$emb5 !== void 0 && _currentPost$post$emb5.uri.includes('youtu.be')) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube\",\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: getPostYoutubeId(currentPost.post.embed.external.uri)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : null, (currentPost === null || currentPost === void 0 ? void 0 : (_currentPost$post2 = currentPost.post) === null || _currentPost$post2 === void 0 ? void 0 : (_currentPost$post2$em = _currentPost$post2.embed) === null || _currentPost$post2$em === void 0 ? void 0 : (_currentPost$post2$em2 = _currentPost$post2$em.record) === null || _currentPost$post2$em2 === void 0 ? void 0 : _currentPost$post2$em2.record) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-reskeet-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentPost.post.embed.record.author.avatar,\n          alt: `${currentPost.post.embed.record.author.name}'s avatar`,\n          className: \"author-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quoted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://bsky.app/profile/${currentPost.post.embed.record.author.handle}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: [\"@\", currentPost.post.embed.record.author.handle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoted-post-text\",\n          children: parseText(currentPost.post.embed.record.record.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), (_currentPost$post$emb6 = currentPost.post.embed.record.record.embed) === null || _currentPost$post$emb6 === void 0 ? void 0 : (_currentPost$post$emb7 = _currentPost$post$emb6.images) === null || _currentPost$post$emb7 === void 0 ? void 0 : _currentPost$post$emb7.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.fullsize,\n          alt: image.alt,\n          loading: \"lazy\",\n          className: \"skeet-img-file\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)), ((_currentPost$post$emb8 = currentPost.post.embed.record.record.embed) === null || _currentPost$post$emb8 === void 0 ? void 0 : (_currentPost$post$emb9 = _currentPost$post$emb8.external) === null || _currentPost$post$emb9 === void 0 ? void 0 : _currentPost$post$emb9.uri) && (currentPost.post.embed.record.record.embed.external.uri.includes('youtube.com') || currentPost.post.embed.record.record.embed.external.uri.includes('youtu.be')) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"youtube\",\n          children: /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: getPostYoutubeId(currentPost.post.embed.record.record.embed.external.uri)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentPostIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPostIndex >= posts.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"xg5jlqEZvHBb7MxnhAxUVjT0tlk=\");\n_c = BlueskySocial;\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","YouTube","jsxDEV","_jsxDEV","BlueskySocial","_s","_currentPost$post$rec","_currentPost$post","_currentPost$post$rec2","_currentPost$post$emb","_currentPost$post$emb2","_currentPost$post$emb3","_currentPost$post$emb4","_currentPost$post$emb5","_currentPost$post2","_currentPost$post2$em","_currentPost$post2$em2","_currentPost$post$emb6","_currentPost$post$emb7","_currentPost$post$emb8","_currentPost$post$emb9","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","currentPostIndex","setCurrentPostIndex","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","Array","isArray","feed","console","handlePrevious","prevIndex","Math","max","handleNext","min","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPost","log","post","record","parseText","text","usernameRegex","split","map","part","index","href","target","rel","getPostYoutubeId","url","id","includes","urlParams","URLSearchParams","URL","search","get","src","author","avatar","alt","name","Date","createdAt","toLocaleString","embed","images","image","fullsize","loading","external","uri","videoId","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPostIndex, setCurrentPostIndex] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const agent = new BskyAgent({ service: SERVICE_URL });\r\n      const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n      await agent.login({ identifier: did, password: APP_PASSWORD });\r\n      const { data } = await agent.getAuthorFeed({\r\n        actor: did,\r\n        filter: 'posts_and_author_threads',\r\n        limit: 25,\r\n      });\r\n\r\n      if (Array.isArray(data.feed)) {\r\n        setPosts(data.feed);\r\n      } else {\r\n        console.error('Invalid feed data format:', data.feed);\r\n        setError('Error fetching data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Error fetching data');\r\n    }\r\n  }\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentPostIndex(prevIndex => Math.max(prevIndex - 1, 0));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentPostIndex(prevIndex => Math.min(prevIndex + 1, posts.length - 1));\r\n  };\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  if (posts.length === 0) {\r\n    return <div className='bsky-home skeet-text'>Loading skeets...</div>;\r\n  }\r\n\r\n  const currentPost = posts[currentPostIndex];\r\n\r\n  console.log('Current post:', currentPost); // Debugging log to inspect the currentPost object\r\n\r\n  if (!currentPost || !currentPost.post || !currentPost.post.record) {\r\n    console.error(\"Current post is undefined or missing the record property:\", currentPost);\r\n    return <div className='bsky-home skeet-text'>Error loading skeet...</div>;\r\n  }\r\n\r\n  const parseText = (text) => {\r\n    console.log('parseText called with:', text); // Debugging log\r\n    if (!text) return ''; // Return an empty string if text is undefined\r\n    const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\r\n\r\n    return text.split(usernameRegex).map((part, index) => {\r\n      if (index % 2 === 0) {\r\n        return part; // Normal text\r\n      } else {\r\n        return <a href={`https://bsky.app/profile/${part}`} target=\"_blank\" rel=\"noreferrer\">@{part}</a>; // Link to user profile\r\n      }\r\n    });\r\n  };\r\n\r\n  const getPostYoutubeId = (url) => {\r\n    let id = '';\r\n    if (url.includes('youtube.com')) {\r\n      const urlParams = new URLSearchParams(new URL(url).search);\r\n      id = urlParams.get('v');\r\n    } else if (url.includes('youtu.be')) {\r\n      id = url.split('youtu.be/')[1];\r\n      id = id.split('?')[0];\r\n    }\r\n    return id;\r\n  };\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <div className='bsky-latest'><h2>Latest from the Bsky</h2>\r\n      </div>\r\n      <div className='skeet-header'>\r\n          <img src={currentPost.post.author.avatar} alt={`${currentPost.post.author.name}'s avatar`} className='author-avatar' />\r\n          <p className='skeet-date'>Posted on <a className='skeet-author' href=\"https://bsky.app\" target=\"_blank\" rel=\"noreferrer\">The Bsky</a> by <a className='skeet-author' href={`https://bsky.app/profile/${currentPost.post.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{currentPost.post.author.handle}</a> on <u>{new Date(currentPost.post.record.createdAt).toLocaleString()}</u></p>\r\n        </div>\r\n      <div className='skeet-text'>\r\n        {/* Display the post's author and timestamp */}\r\n        \r\n        <p>{parseText(currentPost?.post?.record?.text ?? 'No text available')}</p>\r\n        {/* Display images */}\r\n        {currentPost.post.embed?.images?.map((image, index) => (\r\n          <img key={index} src={image.fullsize} alt={image.alt} loading=\"lazy\" className='skeet-img-file' />\r\n        ))}\r\n        {/* Display YouTube embeds */}\r\n        {currentPost.post.embed?.external && (currentPost.post.embed.external.uri.includes('youtube.com') || currentPost.post.embed?.external?.uri.includes('youtu.be')) ? (\r\n          <div className='youtube'>\r\n            <YouTube videoId={getPostYoutubeId(currentPost.post.embed.external.uri)} />\r\n          </div>\r\n        ) : null}\r\n        {/* Display Quote-Reskeets (Quote Reposts) with user avatar and name */}\r\n        {currentPost?.post?.embed?.record?.record && (\r\n          <div className=\"quote-reskeet-box\">\r\n            <img src={currentPost.post.embed.record.author.avatar} alt={`${currentPost.post.embed.record.author.name}'s avatar`} className='author-avatar' />\r\n            <p>Quoted by <a href={`https://bsky.app/profile/${currentPost.post.embed.record.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{currentPost.post.embed.record.author.handle}</a></p>\r\n            <div className=\"quoted-post-text\">\r\n              {parseText(currentPost.post.embed.record.record.text)}\r\n            </div>\r\n            {/* Display images from the quoted post */}\r\n            {currentPost.post.embed.record.record.embed?.images?.map((image, index) => (\r\n              <img key={index} src={image.fullsize} alt={image.alt} loading=\"lazy\" className='skeet-img-file' />\r\n            ))}\r\n            {/* Display YouTube video from the quoted post */}\r\n            {currentPost.post.embed.record.record.embed?.external?.uri && \r\n            (currentPost.post.embed.record.record.embed.external.uri.includes('youtube.com') || currentPost.post.embed.record.record.embed.external.uri.includes('youtu.be')) && (\r\n              <div className='youtube'>\r\n                <YouTube videoId={getPostYoutubeId(currentPost.post.embed.record.record.embed.external.uri)} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={handlePrevious} disabled={currentPostIndex === 0}>Previous</button>\r\n        <button onClick={handleNext} disabled={currentPostIndex >= posts.length - 1}>Next</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BlueskySocial;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}