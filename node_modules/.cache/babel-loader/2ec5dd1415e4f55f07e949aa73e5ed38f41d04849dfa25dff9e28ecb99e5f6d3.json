{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const DID_URL = \"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\n  const APP_PASSWORD = \"YOUR_ACTUAL_APP_PASSWORD\"; // Replace with your actual app password\n  const API_KEY_URL = \"https://bsky.social/xrpc/com.atproto.server.createSession\";\n  const FEED_URL = \"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\n  const POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Resolving handle\n        const handleUrl = encodeURI(`${DID_URL}?handle=${HANDLE}`);\n        const handleRep = await axios.get(handleUrl);\n        const DID = handleRep.data.did;\n        console.log(DID);\n\n        // Getting token\n        const tokenOpt = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: JSON.stringify({\n            \"identifier\": DID,\n            \"password\": APP_PASSWORD\n          })\n        };\n        const tokenRep = await axios.post(API_KEY_URL, tokenOpt);\n        const TOKEN = tokenRep.data.accessJwt;\n        console.log(TOKEN);\n\n        // Getting the latest posts\n        const feedUrl = encodeURI(`${FEED_URL}?actor=${HANDLE}&limit=2`);\n        const feedOpt = {\n          headers: {\n            'Authorization': `Bearer ${TOKEN}`\n          }\n        };\n        const feedRep = await axios.get(feedUrl, feedOpt);\n        const feed = feedRep.data.feed;\n        const postsData = feed.map(item => ({\n          date: item.post.record.createdAt,\n          text: item.post.record.text\n        }));\n        setPosts(postsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", post.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", post.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = BlueskySocial;\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","DID_URL","APP_PASSWORD","API_KEY_URL","FEED_URL","POST_FEED_URL","posts","setPosts","fetchData","handleUrl","encodeURI","handleRep","get","DID","data","did","console","log","tokenOpt","method","headers","JSON","stringify","tokenRep","post","TOKEN","accessJwt","feedUrl","feedOpt","feedRep","feed","postsData","map","item","date","record","createdAt","text","error","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const DID_URL = \"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\r\n  const APP_PASSWORD = \"YOUR_ACTUAL_APP_PASSWORD\"; // Replace with your actual app password\r\n  const API_KEY_URL = \"https://bsky.social/xrpc/com.atproto.server.createSession\";\r\n  const FEED_URL = \"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\r\n  const POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        // Resolving handle\r\n        const handleUrl = encodeURI(`${DID_URL}?handle=${HANDLE}`);\r\n        const handleRep = await axios.get(handleUrl);\r\n        const DID = handleRep.data.did;\r\n        console.log(DID);\r\n\r\n        // Getting token\r\n        const tokenOpt = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          data: JSON.stringify({ \"identifier\": DID, \"password\": APP_PASSWORD })\r\n        };\r\n        const tokenRep = await axios.post(API_KEY_URL, tokenOpt);\r\n        const TOKEN = tokenRep.data.accessJwt;\r\n        console.log(TOKEN);\r\n\r\n        // Getting the latest posts\r\n        const feedUrl = encodeURI(`${FEED_URL}?actor=${HANDLE}&limit=2`);\r\n        const feedOpt = {\r\n          headers: { 'Authorization': `Bearer ${TOKEN}` }\r\n        };\r\n        const feedRep = await axios.get(feedUrl, feedOpt);\r\n        const feed = feedRep.data.feed;\r\n        const postsData = feed.map(item => ({\r\n          date: item.post.record.createdAt,\r\n          text: item.post.record.text\r\n        }));\r\n        setPosts(postsData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest Posts</h1>\r\n      <ul>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <p>Date: {post.date}</p>\r\n            <p>Text: {post.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlueskySocial;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}