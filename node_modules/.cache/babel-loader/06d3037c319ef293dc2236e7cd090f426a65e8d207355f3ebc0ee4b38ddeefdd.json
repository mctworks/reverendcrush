{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const DID_URL = \"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\n  const APP_PASSWORD = \"no6e-unlo-oob2-exqz\"; // Replace with filler before pushing to git\n  const API_KEY_URL = \"https://bsky.social/xrpc/com.atproto.server.createSession\";\n  const FEED_URL = \"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\n  const POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Resolving handle\n        const handleUrl = encodeURI(`${DID_URL}?handle=${HANDLE}`);\n        const handleRep = await axios.get(handleUrl);\n        const DID = handleRep.data.did;\n        console.log(DID);\n        console.log(\"TEST 1: \" + JSON.stringify({\n          \"identifier\": DID,\n          \"password\": APP_PASSWORD\n        }));\n\n        // Getting token\n        const tokenOpt = {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: {\n            \"identifier\": DID,\n            \"password\": APP_PASSWORD\n          }\n        };\n        console.log(\"TEST 2: \" + JSON.stringify({\n          \"identifier\": DID,\n          \"password\": APP_PASSWORD\n        }));\n        try {\n          const tokenRep = await axios.post(API_KEY_URL, tokenOpt);\n          const TOKEN = tokenRep.data.accessJwt;\n          console.log(TOKEN);\n        } catch (error) {\n          console.error('Error fetching token:', error);\n        }\n\n        // Getting the latest posts\n        const feedUrl = encodeURI(`${FEED_URL}?actor=${HANDLE}&limit=2`);\n        const feedOpt = {\n          headers: {\n            'Authorization': `Bearer ${TOKEN}`\n          }\n        };\n        const feedRep = await axios.get(feedUrl, feedOpt);\n        const feed = feedRep.data.feed;\n        const postsData = feed.map(item => ({\n          date: item.post.record.createdAt,\n          text: item.post.record.text\n        }));\n        setPosts(postsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", post.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", post.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = BlueskySocial;\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","DID_URL","APP_PASSWORD","API_KEY_URL","FEED_URL","POST_FEED_URL","posts","setPosts","fetchData","handleUrl","encodeURI","handleRep","get","DID","data","did","console","log","JSON","stringify","tokenOpt","headers","tokenRep","post","TOKEN","accessJwt","error","feedUrl","feedOpt","feedRep","feed","postsData","map","item","date","record","createdAt","text","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const DID_URL = \"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\r\n  const APP_PASSWORD = \"no6e-unlo-oob2-exqz\"; // Replace with filler before pushing to git\r\n  const API_KEY_URL = \"https://bsky.social/xrpc/com.atproto.server.createSession\";\r\n  const FEED_URL = \"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\r\n  const POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        // Resolving handle\r\n        const handleUrl = encodeURI(`${DID_URL}?handle=${HANDLE}`);\r\n        const handleRep = await axios.get(handleUrl);\r\n        const DID = handleRep.data.did;\r\n        console.log(DID);\r\n        console.log(\"TEST 1: \" + JSON.stringify({ \"identifier\": DID, \"password\": APP_PASSWORD }))\r\n\r\n        // Getting token\r\n        const tokenOpt = {\r\n          headers: { 'Content-Type': 'application/json' },\r\n          data: { \"identifier\": DID, \"password\": APP_PASSWORD }\r\n        };\r\n        console.log(\"TEST 2: \" + JSON.stringify({ \"identifier\": DID, \"password\": APP_PASSWORD }))\r\n        try {\r\n          const tokenRep = await axios.post(API_KEY_URL, tokenOpt);\r\n          const TOKEN = tokenRep.data.accessJwt;\r\n          console.log(TOKEN);\r\n        } catch (error) {\r\n          console.error('Error fetching token:', error);\r\n        }\r\n\r\n        // Getting the latest posts\r\n        const feedUrl = encodeURI(`${FEED_URL}?actor=${HANDLE}&limit=2`);\r\n        const feedOpt = {\r\n          headers: { 'Authorization': `Bearer ${TOKEN}` }\r\n        };\r\n        const feedRep = await axios.get(feedUrl, feedOpt);\r\n        const feed = feedRep.data.feed;\r\n        const postsData = feed.map(item => ({\r\n          date: item.post.record.createdAt,\r\n          text: item.post.record.text\r\n        }));\r\n        setPosts(postsData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest Posts</h1>\r\n      <ul>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <p>Date: {post.date}</p>\r\n            <p>Text: {post.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlueskySocial;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}