{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 1\n        });\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => {\n            var _post$embed, _post$embed$media;\n            const post = item.post;\n            const {\n              likeCount,\n              replyCount,\n              repostCount\n            } = post;\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\n            const images = ((_post$embed = post.embed) === null || _post$embed === void 0 ? void 0 : (_post$embed$media = _post$embed.media) === null || _post$embed$media === void 0 ? void 0 : _post$embed$media.images) || [];\n            console.log(post);\n            return {\n              author: post.author,\n              date: new Date(post.record.createdAt).toLocaleString('en-US', {\n                timeZone: 'America/New_York',\n                dateStyle: 'long',\n                timeStyle: 'long'\n              }),\n              text: post.record.text,\n              embed: post.embed,\n              bangerScore: bangerScore,\n              images: images,\n              labels: post.record.labels\n            };\n          });\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log('Posts State Updated:', posts);\n    posts.forEach((post, index) => {\n      console.log(`Post [${index}]:`, post);\n      if (post.embed && post.embed.record && post.embed.record.record) {\n        console.log(`Quoted Post Data [${index}]:`, post.embed.record.record);\n        if (post.embed.record.record.embed && post.embed.record.record.embed.images) {\n          console.log(`Quoted Post Images [${index}]:`, post.embed.record.record.embed.images);\n        }\n      }\n    });\n  }, [posts]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Skeet On Bsky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"latest-skeet\",\n      children: posts.map((post, index) => {\n        var _post$embed2, _post$embed2$record, _post$embed2$record$r, _post$embed2$record$r2, _post$embed2$record$r3, _post$embed2$record$r4;\n        // Post object rendering logic ...\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"skeet-date\",\n            children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://bsky.app/profile/${post.author.handle}`,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: [\"@\", post.author.handle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n              children: post.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 170\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeet-text\",\n            style: {\n              whiteSpace: 'pre-line'\n            },\n            children: [parseText(post.text), post.images && !post.record.labels.values && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: post.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"skeet-img-file\",\n                src: image.fullsize,\n                alt: image.alt || 'Quoted post image'\n              }, imgIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), post.embed && post.embed.media && post.embed.media.external && !post.embed.media.external.uri.includes('youtu.be') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"web-media\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-webcard\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.embed.media.external.uri,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"webcard-img\",\n                    src: post.embed.media.external.thumb,\n                    alt: post.embed.media.external.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"webcard-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), post.embed && post.embed.media && post.embed.media.external && post.embed.media.external.uri.includes('youtu.be') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-youtube\",\n                children: /*#__PURE__*/_jsxDEV(YouTube, {\n                  videoId: getPostYoutubeId(post.embed.media.external.uri)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), post.embed && post.embed.record && post.embed.record.record && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quote-reskeet-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reskeet-user\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"reskeet-pfp\",\n                src: post.embed.record.record.author.avatar,\n                alt: `Avatar of ${post.embed.record.record.author.handle}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Reskeeting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"reskeet-handle\",\n                  href: `https://bsky.app/profile/${post.embed.record.record.author.handle}`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: [\"@\", post.embed.record.record.author.handle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quoted-post-text\",\n              children: post.embed.record.record.value.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), post.embed.record.record.embeds && post.embed.record.record.embeds[0].media.images && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: post.embed.record.record.embeds[0].media.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"skeet-img-file\",\n                src: image.fullsize,\n                alt: image.alt || 'Quoted post image'\n              }, imgIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), post.embed && post.embed.media && post.embed.media.external && !post.embed.media.external.uri.includes('youtu.be') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"web-media\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-webcard\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.embed.media.external.uri,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"webcard-img\",\n                    src: post.embed.media.external.thumb,\n                    alt: post.embed.media.external.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"webcard-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), ((_post$embed2 = post.embed) === null || _post$embed2 === void 0 ? void 0 : (_post$embed2$record = _post$embed2.record) === null || _post$embed2$record === void 0 ? void 0 : (_post$embed2$record$r = _post$embed2$record.record) === null || _post$embed2$record$r === void 0 ? void 0 : (_post$embed2$record$r2 = _post$embed2$record$r.embeds[0]) === null || _post$embed2$record$r2 === void 0 ? void 0 : (_post$embed2$record$r3 = _post$embed2$record$r2.media) === null || _post$embed2$record$r3 === void 0 ? void 0 : (_post$embed2$record$r4 = _post$embed2$record$r3.external) === null || _post$embed2$record$r4 === void 0 ? void 0 : _post$embed2$record$r4.uri.includes('youtu.be')) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skeet-youtube\",\n                children: /*#__PURE__*/_jsxDEV(YouTube, {\n                  videoId: getPostYoutubeId(post.embed.record.record.embeds[0].media.external.uri)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube-deets\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.embed.record.record.embeds[0].media.external.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"skeet-metatext\",\n                  children: /*#__PURE__*/_jsxDEV(RenderTextWithLinks, {\n                    text: post.embed.record.record.embeds[0].media.external.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"skeet-banger-score\",\n              children: [\"Banger Score:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"glow\",\n                children: post.bangerScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"JFzKEg8tC++VVrnFduep2nCQEBg=\");\n_c = BlueskySocial;\nconst constructImageUrl = (did, blobRef) => {\n  return `https://cdn.bsky.app/img/feed_thumbnail/plain/${did}/${blobRef}@jpeg`;\n};\nconst parseText = text => {\n  if (!text) return ''; // Return an empty string if text is undefined\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\n  return text.split(usernameRegex).map((part, index) => {\n    if (index % 2 === 0) {\n      return part; // Normal text\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://bsky.app/profile/${part}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [\"@\", part]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 14\n      }, this); // Link to user profile\n    }\n  });\n};\nconst getPostYoutubeId = url => {\n  const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/))([\\w-]{11})(?:\\S+)?/;\n  const matches = url.match(regex);\n  return matches ? matches[1] : null;\n};\nfunction formatTextWithLinks(text) {\n  if (text === undefined) return ''; // Add this line to handle undefined inputs\n  // Regular expression to match URLs\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  // Replace URLs with a line break followed by the URL\n  return text.replace(urlRegex, '<br />$1');\n}\nfunction RenderTextWithLinks({\n  text\n}) {\n  // Ensure text is treated as a string, even if it's undefined\n  const formattedText = formatTextWithLinks(text || '');\n  // Split the formatted text by <br /> to get an array of strings\n  const parts = formattedText.split('<br />');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map((part, index) =>\n    /*#__PURE__*/\n    // Render each part, and if it's not the first part, add a <br /> before it\n    _jsxDEV(React.Fragment, {\n      children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }, this), part]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RenderTextWithLinks;\nexport default BlueskySocial;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlueskySocial\");\n$RefreshReg$(_c2, \"RenderTextWithLinks\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","YouTube","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","Array","isArray","feed","postsData","map","item","_post$embed","_post$embed$media","post","likeCount","replyCount","repostCount","bangerScore","images","embed","media","console","log","author","date","Date","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","labels","Error","forEach","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_post$embed2","_post$embed2$record","_post$embed2$record$r","_post$embed2$record$r2","_post$embed2$record$r3","_post$embed2$record$r4","href","target","rel","style","whiteSpace","parseText","values","image","imgIndex","src","fullsize","alt","external","uri","includes","thumb","title","RenderTextWithLinks","description","videoId","getPostYoutubeId","avatar","value","embeds","_c","constructImageUrl","blobRef","usernameRegex","split","part","url","regex","matches","match","formatTextWithLinks","undefined","urlRegex","replace","formattedText","parts","Fragment","_c2","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 1,\r\n        });\r\n\r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => {\r\n            const post = item.post;\r\n            const { likeCount, replyCount, repostCount } = post;\r\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\r\n            const images = post.embed?.media?.images || [];\r\n            console.log(post)\r\n            return {\r\n              author: post.author,\r\n              date: new Date(post.record.createdAt).toLocaleString('en-US', { timeZone: 'America/New_York', dateStyle: 'long', timeStyle: 'long' }),\r\n              text: post.record.text,\r\n              embed: post.embed,\r\n              bangerScore: bangerScore,\r\n              images: images,\r\n              labels: post.record.labels\r\n            };\r\n          });\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Posts State Updated:', posts);\r\n    posts.forEach((post, index) => {\r\n      console.log(`Post [${index}]:`, post);\r\n      if (post.embed && post.embed.record && post.embed.record.record) {\r\n        console.log(`Quoted Post Data [${index}]:`, post.embed.record.record);\r\n        if (post.embed.record.record.embed && post.embed.record.record.embed.images) {\r\n          console.log(`Quoted Post Images [${index}]:`, post.embed.record.record.embed.images);\r\n        }\r\n      }\r\n    });\r\n  }, [posts]);\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <h2>Latest Skeet On Bsky</h2>\r\n      <ul className='latest-skeet'>\r\n      {posts.map((post, index) => {\r\n        // Post object rendering logic ...\r\n        return (\r\n          <li key={index}>\r\n            {/* Rendering user's info (Rev, unless he reskeets someone else) and text*/}\r\n            <p className='skeet-date'>Posted by <a href={`https://bsky.app/profile/${post.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{post.author.handle}</a> on <u>{post.date}</u></p>\r\n            <div className='skeet-text' style={{ whiteSpace: 'pre-line' }}>\r\n              {parseText(post.text)}\r\n\r\n              {/*Getting user images, if user has any*/}\r\n              {post.images && !post.record.labels.values && (\r\n                  <div className=\"skeet-image-group\">\r\n                    {post.images.map((image, imgIndex) => (\r\n                      <img\r\n                        key={imgIndex}\r\n                        className=\"skeet-img-file\"\r\n                        src={image.fullsize}\r\n                        alt={image.alt || 'Quoted post image'}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n              {/* Check for a website card with the post, and render it if it exists. Check to see if it's not YouTube, as there's another render for that */}\r\n              {post.embed && post.embed.media && post.embed.media.external && !post.embed.media.external.uri.includes('youtu.be') && (\r\n                <div className='web-media'>\r\n                  <div className='skeet-webcard'>\r\n                    <a href={post.embed.media.external.uri} target=\"_blank\" rel=\"noreferrer\">\r\n                      <img\r\n                        className=\"webcard-img\"\r\n                        src={post.embed.media.external.thumb}\r\n                      alt={post.embed.media.external.title}\r\n                    />\r\n                  </a>\r\n                  </div>\r\n                  <div className='webcard-deets'>\r\n                    <h3>{post.embed.media.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.media.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Check and embed user's Youtube video and info, if any */}\r\n              {post.embed && post.embed.media && post.embed.media.external && post.embed.media.external.uri.includes('youtu.be') && (\r\n                <div className='youtube'>\r\n                  <div className='skeet-youtube'>\r\n                    <YouTube videoId={getPostYoutubeId(post.embed.media.external.uri)} />\r\n                  </div>\r\n                  <div className='youtube-deets'>\r\n                    <h3>{post.embed.media.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.media.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Quote-Reskeets (Quote Reposts) */}\r\n            {post.embed && post.embed.record && post.embed.record.record && (\r\n              <div className=\"quote-reskeet-box\">\r\n                <div className=\"reskeet-user\">\r\n                  <img\r\n                    className=\"reskeet-pfp\"\r\n                    src={post.embed.record.record.author.avatar}\r\n                    alt={`Avatar of ${post.embed.record.record.author.handle}`}\r\n                  />\r\n                  <div>\r\n                    Reskeeting...\r\n                    <br />\r\n                    <a\r\n                      className=\"reskeet-handle\"\r\n                      href={`https://bsky.app/profile/${post.embed.record.record.author.handle}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      @{post.embed.record.record.author.handle}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Render quoted post text */}\r\n                <div className=\"quoted-post-text\">\r\n                  {post.embed.record.record.value.text}\r\n                </div>\r\n\r\n              {/* Getting Quote-Reskeet images, if the quoted user has any */}  \r\n              {post.embed.record.record.embeds && post.embed.record.record.embeds[0].media.images && (\r\n                  <div className=\"skeet-image-group\">\r\n                    {post.embed.record.record.embeds[0].media.images.map((image, imgIndex) => (\r\n                      <img\r\n                        key={imgIndex}\r\n                        className=\"skeet-img-file\"\r\n                        src={image.fullsize}\r\n                        alt={image.alt || 'Quoted post image'}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              \r\n{/* Check for a website card with the quoted post, and render it if it exists. Just like with original posts, there's another render to handle YouTube embeds */}\r\n{post.embed && post.embed.media && post.embed.media.external && !post.embed.media.external.uri.includes('youtu.be') && (\r\n                <div className='web-media'>\r\n                  <div className='skeet-webcard'>\r\n                    <a href={post.embed.media.external.uri} target=\"_blank\" rel=\"noreferrer\">\r\n                      <img\r\n                        className=\"webcard-img\"\r\n                        src={post.embed.media.external.thumb}\r\n                      alt={post.embed.media.external.title}\r\n                    />\r\n                  </a>\r\n                  </div>\r\n                  <div className='webcard-deets'>\r\n                    <h3>{post.embed.media.external.title}</h3>\r\n                    <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.media.external.description} /></p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n\r\n              {/* Check and render Quoted User's Youtube video, if any */}\r\n              {post.embed?.record?.record?.embeds[0]?.media?.external?.uri.includes('youtu.be') && (\r\n  <div className='youtube'>\r\n    <div className='skeet-youtube'>\r\n      <YouTube videoId={getPostYoutubeId(post.embed.record.record.embeds[0].media.external.uri)} />\r\n    </div>\r\n    <div className='youtube-deets'>\r\n      <h3>{post.embed.record.record.embeds[0].media.external.title}</h3>\r\n      <p className='skeet-metatext'><RenderTextWithLinks text={post.embed.record.record.embeds[0].media.external.description} /></p>\r\n    </div>\r\n  </div>)}\r\n              </div> \r\n            )}\r\n            <div>\r\n              <h4 className='skeet-banger-score'>Banger Score:<br/> <span className='glow'>{post.bangerScore}</span></h4>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst constructImageUrl = (did, blobRef) => {\r\n  return `https://cdn.bsky.app/img/feed_thumbnail/plain/${did}/${blobRef}@jpeg`;\r\n};\r\n\r\nconst parseText = (text) => {\r\n  if (!text) return ''; // Return an empty string if text is undefined\r\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\r\n\r\n  return text.split(usernameRegex).map((part, index) => {\r\n    if (index % 2 === 0) {\r\n      return part; // Normal text\r\n    } else {\r\n      return <a href={`https://bsky.app/profile/${part}`} target=\"_blank\" rel=\"noreferrer\">@{part}</a>; // Link to user profile\r\n    }\r\n  });\r\n};\r\n\r\nconst getPostYoutubeId = (url) => {\r\n  const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/))([\\w-]{11})(?:\\S+)?/;\r\n  const matches = url.match(regex);\r\n  return matches ? matches[1] : null;\r\n};\r\n\r\nfunction formatTextWithLinks(text) {\r\n  if (text === undefined) return ''; // Add this line to handle undefined inputs\r\n  // Regular expression to match URLs\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  // Replace URLs with a line break followed by the URL\r\n  return text.replace(urlRegex, '<br />$1');\r\n}\r\n\r\nfunction RenderTextWithLinks({ text }) {\r\n  // Ensure text is treated as a string, even if it's undefined\r\n  const formattedText = formatTextWithLinks(text || '');\r\n  // Split the formatted text by <br /> to get an array of strings\r\n  const parts = formattedText.split('<br />');\r\n\r\n  return (\r\n    <div>\r\n      {parts.map((part, index) => (\r\n        // Render each part, and if it's not the first part, add a <br /> before it\r\n        <React.Fragment key={index}>\r\n          {index !== 0 && <br />}\r\n          {part}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlueskySocial;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}