{"ast":null,"code":"import React from 'react';\nconst HANDLE = 'reverendcrush.com';\nconst DID_URL = \"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\nconst APP_PASSWORD = \"no6e-unlo-oob2-exqz\";\nconst API_KEY_URL = \"https://bsky.social/xrpc/com.atproto.server.createSession\";\nconst FEED_URL = \"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\nconst POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\nfunction BlueSky() {\n  function BlueskySocial() {\n    // Resolving handle\n    let handleOpt = {\n      'method': 'GET'\n    };\n    let handleUrl = encodeURI(DID_URL + \"?handle=\" + HANDLE);\n    const handleRep = UrlFetchApp.fetch(handleUrl, handleOpt);\n    const DID = JSON.parse(handleRep.getContentText()).did;\n    console.log(DID);\n\n    // Getting token\n    let tokenOpt = {\n      'method': 'POST',\n      'contentType': 'application/json',\n      'payload': JSON.stringify({\n        \"identifier\": DID,\n        \"password\": APP_PASSWORD\n      })\n    };\n    const tokenRep = UrlFetchApp.fetch(API_KEY_URL, tokenOpt);\n    // console.log(tokenRep.getContentText())\n    const TOKEN = JSON.parse(tokenRep.getContentText()).accessJwt;\n    console.log(TOKEN);\n  }\n\n  // Getting the good Reverend's latest skeet. I'm sure it's a banger...\n  let feedUrl = encodeURI(FEED_URL + \"?actor=HANDLE&limit=LIMIT\").replace(\"HANDLE\", HANDLE).replace(\"LIMIT\", 2);\n  let feedOpt = {\n    'method': 'GET',\n    'headers': {\n      \"Authorization\": \"Bearer \" + TOKEN\n    }\n  };\n  const feedRep = UrlFetchApp.fetch(feedUrl, feedOpt);\n  //console.log(postsRep.getContentText())\n  const feed = JSON.parse(feedRep).feed;\n  feed.forEach(function (item) {\n    let post = item.post;\n    console.log(\"Date : \" + post.record.createdAt);\n    console.log(\"Text : \" + post.record.text);\n  });\n}\n_c = BlueSky;\nexport default BlueSky;\nvar _c;\n$RefreshReg$(_c, \"BlueSky\");","map":{"version":3,"names":["React","HANDLE","DID_URL","APP_PASSWORD","API_KEY_URL","FEED_URL","POST_FEED_URL","BlueSky","BlueskySocial","handleOpt","handleUrl","encodeURI","handleRep","UrlFetchApp","fetch","DID","JSON","parse","getContentText","did","console","log","tokenOpt","stringify","tokenRep","TOKEN","accessJwt","feedUrl","replace","feedOpt","feedRep","feed","forEach","item","post","record","createdAt","text","_c","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst HANDLE='reverendcrush.com';\r\nconst DID_URL=\"https://bsky.social/xrpc/com.atproto.identity.resolveHandle\";\r\nconst APP_PASSWORD = \"no6e-unlo-oob2-exqz\";\r\nconst API_KEY_URL= \"https://bsky.social/xrpc/com.atproto.server.createSession\";\r\nconst FEED_URL=\"https://bsky.social/xrpc/app.bsky.feed.getAuthorFeed\";\r\nconst POST_FEED_URL = \"https://bsky.social/xrpc/com.atproto.repo.createRecord\";\r\n\r\nfunction BlueSky(){\r\nfunction BlueskySocial() {\r\n  // Resolving handle\r\n  let handleOpt = {\r\n    'method' : 'GET',\r\n  };\r\n  let handleUrl = encodeURI(DID_URL+\"?handle=\"+HANDLE)\r\n  const handleRep = UrlFetchApp.fetch(handleUrl, handleOpt);\r\n  const DID = JSON.parse(handleRep.getContentText()).did\r\n  console.log(DID)\r\n\r\n  // Getting token\r\n  let tokenOpt = {\r\n    'method' : 'POST',\r\n    'contentType': 'application/json',\r\n    'payload' : JSON.stringify({\"identifier\":DID,\"password\":APP_PASSWORD})\r\n  };\r\n  const tokenRep = UrlFetchApp.fetch(API_KEY_URL, tokenOpt);\r\n  // console.log(tokenRep.getContentText())\r\n  const TOKEN = JSON.parse(tokenRep.getContentText()).accessJwt\r\n  console.log(TOKEN)\r\n}\r\n\r\n// Getting the good Reverend's latest skeet. I'm sure it's a banger...\r\nlet feedUrl = encodeURI(FEED_URL+\"?actor=HANDLE&limit=LIMIT\")\r\n.replace(\"HANDLE\",HANDLE)\r\n.replace(\"LIMIT\",2);\r\n\r\nlet feedOpt = {\r\n'method' : 'GET',\r\n'headers'     : {\"Authorization\": \"Bearer \" + TOKEN}\r\n};\r\n\r\nconst feedRep = UrlFetchApp.fetch(feedUrl, feedOpt);\r\n//console.log(postsRep.getContentText())\r\nconst feed = JSON.parse(feedRep).feed ;\r\nfeed.forEach(function (item){\r\nlet post = item.post\r\nconsole.log(\"Date : \"+post.record.createdAt)\r\nconsole.log(\"Text : \"+post.record.text)\r\n})\r\n\r\n\r\n    \r\n}\r\n\r\nexport default BlueSky;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAC,mBAAmB;AAChC,MAAMC,OAAO,GAAC,6DAA6D;AAC3E,MAAMC,YAAY,GAAG,qBAAqB;AAC1C,MAAMC,WAAW,GAAE,2DAA2D;AAC9E,MAAMC,QAAQ,GAAC,sDAAsD;AACrE,MAAMC,aAAa,GAAG,wDAAwD;AAE9E,SAASC,OAAOA,CAAA,EAAE;EAClB,SAASC,aAAaA,CAAA,EAAG;IACvB;IACA,IAAIC,SAAS,GAAG;MACd,QAAQ,EAAG;IACb,CAAC;IACD,IAAIC,SAAS,GAAGC,SAAS,CAACT,OAAO,GAAC,UAAU,GAACD,MAAM,CAAC;IACpD,MAAMW,SAAS,GAAGC,WAAW,CAACC,KAAK,CAACJ,SAAS,EAAED,SAAS,CAAC;IACzD,MAAMM,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAACM,cAAc,CAAC,CAAC,CAAC,CAACC,GAAG;IACtDC,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;;IAEhB;IACA,IAAIO,QAAQ,GAAG;MACb,QAAQ,EAAG,MAAM;MACjB,aAAa,EAAE,kBAAkB;MACjC,SAAS,EAAGN,IAAI,CAACO,SAAS,CAAC;QAAC,YAAY,EAACR,GAAG;QAAC,UAAU,EAACZ;MAAY,CAAC;IACvE,CAAC;IACD,MAAMqB,QAAQ,GAAGX,WAAW,CAACC,KAAK,CAACV,WAAW,EAAEkB,QAAQ,CAAC;IACzD;IACA,MAAMG,KAAK,GAAGT,IAAI,CAACC,KAAK,CAACO,QAAQ,CAACN,cAAc,CAAC,CAAC,CAAC,CAACQ,SAAS;IAC7DN,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;;EAEA;EACA,IAAIE,OAAO,GAAGhB,SAAS,CAACN,QAAQ,GAAC,2BAA2B,CAAC,CAC5DuB,OAAO,CAAC,QAAQ,EAAC3B,MAAM,CAAC,CACxB2B,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;EAEnB,IAAIC,OAAO,GAAG;IACd,QAAQ,EAAG,KAAK;IAChB,SAAS,EAAO;MAAC,eAAe,EAAE,SAAS,GAAGJ;IAAK;EACnD,CAAC;EAED,MAAMK,OAAO,GAAGjB,WAAW,CAACC,KAAK,CAACa,OAAO,EAAEE,OAAO,CAAC;EACnD;EACA,MAAME,IAAI,GAAGf,IAAI,CAACC,KAAK,CAACa,OAAO,CAAC,CAACC,IAAI;EACrCA,IAAI,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAC;IAC5B,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IACpBd,OAAO,CAACC,GAAG,CAAC,SAAS,GAACa,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC;IAC5ChB,OAAO,CAACC,GAAG,CAAC,SAAS,GAACa,IAAI,CAACC,MAAM,CAACE,IAAI,CAAC;EACvC,CAAC,CAAC;AAIF;AAACC,EAAA,GA5CQ/B,OAAO;AA8ChB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}