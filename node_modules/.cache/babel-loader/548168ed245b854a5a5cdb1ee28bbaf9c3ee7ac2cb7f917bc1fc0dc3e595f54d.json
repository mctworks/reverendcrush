{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\reverendcrush\\\\src\\\\components\\\\BlueskyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BskyAgent } from '@atproto/api';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueskySocial = () => {\n  _s();\n  const HANDLE = 'reverendcrush.com';\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\n  const SERVICE_URL = 'https://bsky.social';\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const agent = new BskyAgent({\n          service: SERVICE_URL\n        });\n        const {\n          data: {\n            did\n          }\n        } = await agent.resolveHandle({\n          handle: HANDLE\n        });\n        await agent.login({\n          identifier: did,\n          password: APP_PASSWORD\n        });\n        const {\n          data\n        } = await agent.getAuthorFeed({\n          actor: did,\n          filter: 'posts_and_author_threads',\n          limit: 1\n        });\n        if (Array.isArray(data.feed)) {\n          const postsData = data.feed.map(item => {\n            var _post$embed, _post$embed$media;\n            const post = item.post;\n            const {\n              likeCount,\n              replyCount,\n              repostCount\n            } = post;\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\n            const images = ((_post$embed = post.embed) === null || _post$embed === void 0 ? void 0 : (_post$embed$media = _post$embed.media) === null || _post$embed$media === void 0 ? void 0 : _post$embed$media.images) || [];\n            console.log(post);\n            // Debugging original post images\n            if (post.embed && post.embed.media && post.embed.media.images) {\n              console.log(\"Original Post Images Data:\", post.embed.media.images);\n              post.embed.media.images.forEach((image, imgIndex) => {\n                if (image && image.fullsize) {\n                  console.log(\"Original Post Image URL:\", image.fullsize);\n                } else {\n                  console.log(`Missing image data for original post image [${imgIndex}]`);\n                }\n              });\n            }\n            return {\n              author: post.author,\n              date: new Date(post.record.createdAt).toLocaleString('en-US', {\n                timeZone: 'America/New_York',\n                dateStyle: 'long',\n                timeStyle: 'long'\n              }),\n              text: post.record.text,\n              embed: post.embed,\n              bangerScore: bangerScore,\n              images: images\n            };\n          });\n          setPosts(postsData);\n        } else {\n          console.error('Invalid feed data format:', data.feed);\n          throw new Error('Invalid feed data format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data');\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log('Posts State Updated:', posts);\n    posts.forEach((post, index) => {\n      console.log(`Post [${index}]:`, post);\n      if (post.embed && post.embed.media && post.embed.media.images) {\n        console.log(`Original Post Images Data [${index}]:`, post.embed.media.images);\n        post.embed.media.images.forEach((image, imgIndex) => {\n          if (image && image.fullsize) {\n            console.log(`Original Post Image [${imgIndex}] URL:`, image.fullsize);\n          } else {\n            console.log(`Missing image data for original post image [${imgIndex}]`);\n          }\n        });\n      }\n      if (post.embed && post.embed.record && post.embed.record.record && post.embed.record.record.embed && post.embed.record.record.embed.images) {\n        console.log(`Quoted Post Images Data [${index}]:`, post.embed.record.record.embed.images);\n        post.embed.record.record.embed.images.forEach((image, imgIndex) => {\n          if (image && image.image && image.image.ref) {\n            console.log(`Quoted Post Image [${imgIndex}] URL:`, image.image.ref['$link']);\n          } else {\n            console.log(`Missing image data for quoted post image [${imgIndex}]`);\n          }\n        });\n      }\n    });\n  }, [posts]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bsky-home skeet-text\",\n      children: [\"BlueSky Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bsky-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Skeet On Bsky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"latest-skeet\",\n      children: posts.map((post, index) => {\n        // Existing rendering logic for each post...\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"skeet-date\",\n            children: [\"Posted by \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://bsky.app/profile/${post.author.handle}`,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: [\"@\", post.author.handle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 49\n            }, this), \" on \", /*#__PURE__*/_jsxDEV(\"u\", {\n              children: post.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 170\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeet-text\",\n            style: {\n              whiteSpace: 'pre-line'\n            },\n            children: [parseText(post.text), post.embed && post.embed.media && post.embed.media.images && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: post.embed.media.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.fullsize,\n                alt: image.alt,\n                className: \"skeet-image-file\"\n              }, imgIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 7\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 3\n            }, this), post.embed && post.embed.external && post.embed.external.uri.includes('youtu.be') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-youtube\",\n              children: [/*#__PURE__*/_jsxDEV(YouTube, {\n                videoId: getPostYoutubeId(post.embed.external.uri)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.embed.external.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"skeet-metatext\",\n                children: post.embed.external.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), post.embed && post.embed.record && post.embed.record.record && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quote-reskeet-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reskeet-user\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"reskeet-pfp\",\n                src: post.embed.record.record.author.avatar,\n                alt: `Avatar of ${post.embed.record.record.author.handle}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Reskeeting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"reskeet-handle\",\n                  href: `https://bsky.app/profile/${post.embed.record.record.author.handle}`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: [\"@\", post.embed.record.record.author.handle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quoted-post-text\",\n              children: post.embed.record.record.value.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), post.embed.record.record.value.embed.images && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skeet-image-group\",\n              children: post.embed.record.record.value.embed.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"skeet-image-file\",\n                src: `https://cdn.bsky.app/img/feed_fullsize/plain/did:plc:zjekxxbzpd4cpzoxhotlsgni/bafkreicgyidysljbgzjpxqjd27iuhhe6md5nastmzjg6qkmz2fxbpb4fbq@jpeg`,\n                alt: image.alt\n              }, imgIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"skeet-banger-score\",\n            children: [\"Banger Score:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 61\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"glow\",\n              children: post.bangerScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueskySocial, \"JFzKEg8tC++VVrnFduep2nCQEBg=\");\n_c = BlueskySocial;\nconst constructImageUrl = (did, blobRef) => {\n  return `https://cdn.bsky.app/img/feed_thumbnail/plain/${did}/${blobRef}@jpeg`;\n};\nconst parseText = text => {\n  if (!text) return ''; // Return an empty string if text is undefined\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\n  return text.split(usernameRegex).map((part, index) => {\n    if (index % 2 === 0) {\n      return part; // Normal text\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://bsky.app/profile/${part}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [\"@\", part]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }, this); // Link to user profile\n    }\n  });\n};\nconst getPostYoutubeId = text => {\n  const matches = text.match(/youtu\\.be\\/([^?\\s]+)/);\n  return matches ? matches[1] : null;\n};\nexport default BlueskySocial;\nvar _c;\n$RefreshReg$(_c, \"BlueskySocial\");","map":{"version":3,"names":["React","useEffect","useState","BskyAgent","YouTube","jsxDEV","_jsxDEV","BlueskySocial","_s","HANDLE","APP_PASSWORD","SERVICE_URL","posts","setPosts","error","setError","fetchData","agent","service","data","did","resolveHandle","handle","login","identifier","password","getAuthorFeed","actor","filter","limit","Array","isArray","feed","postsData","map","item","_post$embed","_post$embed$media","post","likeCount","replyCount","repostCount","bangerScore","images","embed","media","console","log","forEach","image","imgIndex","fullsize","author","date","Date","record","createdAt","toLocaleString","timeZone","dateStyle","timeStyle","text","Error","index","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","style","whiteSpace","parseText","src","alt","external","uri","includes","videoId","getPostYoutubeId","title","description","avatar","value","_c","constructImageUrl","blobRef","usernameRegex","split","part","matches","match","$RefreshReg$"],"sources":["C:/Users/Mike/reverendcrush/src/components/BlueskyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BskyAgent } from '@atproto/api';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst BlueskySocial = () => {\r\n  const HANDLE = 'reverendcrush.com';\r\n  const APP_PASSWORD = 'no6e-unlo-oob2-exqz';\r\n  const SERVICE_URL = 'https://bsky.social';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const agent = new BskyAgent({ service: SERVICE_URL });\r\n        const { data: { did } } = await agent.resolveHandle({ handle: HANDLE });\r\n        await agent.login({ identifier: did, password: APP_PASSWORD });\r\n        const { data } = await agent.getAuthorFeed({\r\n          actor: did,\r\n          filter: 'posts_and_author_threads',\r\n          limit: 1,\r\n        });\r\n        \r\n        if (Array.isArray(data.feed)) {\r\n          const postsData = data.feed.map(item => {\r\n            const post = item.post;\r\n            const { likeCount, replyCount, repostCount } = post;\r\n            const bangerScore = likeCount * 200 + replyCount * 300 + repostCount * 1000;\r\n            const images = post.embed?.media?.images || [];\r\n            console.log(post)\r\n            // Debugging original post images\r\n            if (post.embed && post.embed.media && post.embed.media.images) {\r\n              console.log(\"Original Post Images Data:\", post.embed.media.images);\r\n              post.embed.media.images.forEach((image, imgIndex) => {\r\n                if (image && image.fullsize) {\r\n                  console.log(\"Original Post Image URL:\", image.fullsize);\r\n                } else {\r\n                  console.log(`Missing image data for original post image [${imgIndex}]`);\r\n                }\r\n              });\r\n            }\r\n            return {\r\n              author: post.author,\r\n              date: new Date(post.record.createdAt).toLocaleString('en-US', { timeZone: 'America/New_York', dateStyle: 'long', timeStyle: 'long' }),\r\n              text: post.record.text,\r\n              embed: post.embed,\r\n              bangerScore: bangerScore,\r\n              images: images\r\n            };\r\n          });\r\n          setPosts(postsData);\r\n        } else {\r\n          console.error('Invalid feed data format:', data.feed);\r\n          throw new Error('Invalid feed data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data');\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Posts State Updated:', posts);\r\n    posts.forEach((post, index) => {\r\n      console.log(`Post [${index}]:`, post);\r\n      if (post.embed && post.embed.media && post.embed.media.images) {\r\n        console.log(`Original Post Images Data [${index}]:`, post.embed.media.images);\r\n        post.embed.media.images.forEach((image, imgIndex) => {\r\n          if (image && image.fullsize) {\r\n            console.log(`Original Post Image [${imgIndex}] URL:`, image.fullsize);\r\n          } else {\r\n            console.log(`Missing image data for original post image [${imgIndex}]`);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (post.embed && post.embed.record && post.embed.record.record && post.embed.record.record.embed && post.embed.record.record.embed.images) {\r\n        console.log(`Quoted Post Images Data [${index}]:`, post.embed.record.record.embed.images);\r\n        post.embed.record.record.embed.images.forEach((image, imgIndex) => {\r\n          if (image && image.image && image.image.ref) {\r\n            console.log(`Quoted Post Image [${imgIndex}] URL:`, image.image.ref['$link']);\r\n          } else {\r\n            console.log(`Missing image data for quoted post image [${imgIndex}]`);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [posts]);\r\n\r\n  if (error) {\r\n    return <div className='bsky-home skeet-text'>BlueSky Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className='bsky-home'>\r\n      <h2>Latest Skeet On Bsky</h2>\r\n      <ul className='latest-skeet'>\r\n      \r\n      {posts.map((post, index) => {\r\n        // Existing rendering logic for each post...\r\n        return (\r\n          <li key={index}>\r\n            <p className='skeet-date'>Posted by <a href={`https://bsky.app/profile/${post.author.handle}`} target=\"_blank\" rel=\"noreferrer\">@{post.author.handle}</a> on <u>{post.date}</u></p>\r\n            <div className='skeet-text' style={{ whiteSpace: 'pre-line' }}>\r\n              {parseText(post.text)}\r\n              {post.embed && post.embed.media && post.embed.media.images && (\r\n  <div className='skeet-image-group'>\r\n    {post.embed.media.images.map((image, imgIndex) => (\r\n      <img key={imgIndex} src={image.fullsize} alt={image.alt} className='skeet-image-file' />\r\n    ))}\r\n  </div>\r\n)}\r\n              {post.embed && post.embed.external && post.embed.external.uri.includes('youtu.be') && (\r\n                <div className='skeet-youtube'>\r\n                  <YouTube videoId={getPostYoutubeId(post.embed.external.uri)} />\r\n                  <h3>{post.embed.external.title}</h3>\r\n                  <p className='skeet-metatext'>{post.embed.external.description}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* Now including logic to render quoted post text and images */}\r\n            {post.embed && post.embed.record && post.embed.record.record && (\r\n              <div className=\"quote-reskeet-box\">\r\n                <div className=\"reskeet-user\">\r\n                  <img\r\n                    className=\"reskeet-pfp\"\r\n                    src={post.embed.record.record.author.avatar}\r\n                    alt={`Avatar of ${post.embed.record.record.author.handle}`}\r\n                  />\r\n                  <div>\r\n                    Reskeeting...\r\n                    <br />\r\n                    <a\r\n                      className=\"reskeet-handle\"\r\n                      href={`https://bsky.app/profile/${post.embed.record.record.author.handle}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      @{post.embed.record.record.author.handle}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Render quoted post text */}\r\n                <div className=\"quoted-post-text\">\r\n                  {post.embed.record.record.value.text}\r\n                </div>\r\n                \r\n                {/* Render quoted post images, if any */}\r\n                {post.embed.record.record.value.embed.images && (\r\n                  <div className=\"skeet-image-group\">\r\n                    {post.embed.record.record.value.embed.images.map((image, imgIndex) => (\r\n                      <img\r\n                        key={imgIndex}\r\n                        className=\"skeet-image-file\"\r\n                        src={`https://cdn.bsky.app/img/feed_fullsize/plain/did:plc:zjekxxbzpd4cpzoxhotlsgni/bafkreicgyidysljbgzjpxqjd27iuhhe6md5nastmzjg6qkmz2fxbpb4fbq@jpeg`} alt={image.alt}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Continue with any additional post rendering logic */}\r\n            <h3 className='skeet-banger-score'>Banger Score:<br /> <span className='glow'>{post.bangerScore}</span></h3>\r\n          </li>\r\n        );\r\n      })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst constructImageUrl = (did, blobRef) => {\r\n  return `https://cdn.bsky.app/img/feed_thumbnail/plain/${did}/${blobRef}@jpeg`;\r\n};\r\n\r\nconst parseText = (text) => {\r\n  if (!text) return ''; // Return an empty string if text is undefined\r\n  const usernameRegex = /@(\\w+(?:\\.\\w+)*)(?=[^\\w.@]|$)/g;\r\n\r\n  return text.split(usernameRegex).map((part, index) => {\r\n    if (index % 2 === 0) {\r\n      return part; // Normal text\r\n    } else {\r\n      return <a href={`https://bsky.app/profile/${part}`} target=\"_blank\" rel=\"noreferrer\">@{part}</a>; // Link to user profile\r\n    }\r\n  });\r\n};\r\n\r\nconst getPostYoutubeId = (text) => {\r\n  const matches = text.match(/youtu\\.be\\/([^?\\s]+)/);\r\n  return matches ? matches[1] : null;\r\n};\r\n\r\nexport default BlueskySocial;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAG,mBAAmB;EAClC,MAAMC,YAAY,GAAG,qBAAqB;EAC1C,MAAMC,WAAW,GAAG,qBAAqB;EAEzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAee,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,KAAK,GAAG,IAAId,SAAS,CAAC;UAAEe,OAAO,EAAEP;QAAY,CAAC,CAAC;QACrD,MAAM;UAAEQ,IAAI,EAAE;YAAEC;UAAI;QAAE,CAAC,GAAG,MAAMH,KAAK,CAACI,aAAa,CAAC;UAAEC,MAAM,EAAEb;QAAO,CAAC,CAAC;QACvE,MAAMQ,KAAK,CAACM,KAAK,CAAC;UAAEC,UAAU,EAAEJ,GAAG;UAAEK,QAAQ,EAAEf;QAAa,CAAC,CAAC;QAC9D,MAAM;UAAES;QAAK,CAAC,GAAG,MAAMF,KAAK,CAACS,aAAa,CAAC;UACzCC,KAAK,EAAEP,GAAG;UACVQ,MAAM,EAAE,0BAA0B;UAClCC,KAAK,EAAE;QACT,CAAC,CAAC;QAEF,IAAIC,KAAK,CAACC,OAAO,CAACZ,IAAI,CAACa,IAAI,CAAC,EAAE;UAC5B,MAAMC,SAAS,GAAGd,IAAI,CAACa,IAAI,CAACE,GAAG,CAACC,IAAI,IAAI;YAAA,IAAAC,WAAA,EAAAC,iBAAA;YACtC,MAAMC,IAAI,GAAGH,IAAI,CAACG,IAAI;YACtB,MAAM;cAAEC,SAAS;cAAEC,UAAU;cAAEC;YAAY,CAAC,GAAGH,IAAI;YACnD,MAAMI,WAAW,GAAGH,SAAS,GAAG,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGC,WAAW,GAAG,IAAI;YAC3E,MAAME,MAAM,GAAG,EAAAP,WAAA,GAAAE,IAAI,CAACM,KAAK,cAAAR,WAAA,wBAAAC,iBAAA,GAAVD,WAAA,CAAYS,KAAK,cAAAR,iBAAA,uBAAjBA,iBAAA,CAAmBM,MAAM,KAAI,EAAE;YAC9CG,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;YACjB;YACA,IAAIA,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,KAAK,IAAIP,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,EAAE;cAC7DG,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAET,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,CAAC;cAClEL,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,CAACK,OAAO,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAK;gBACnD,IAAID,KAAK,IAAIA,KAAK,CAACE,QAAQ,EAAE;kBAC3BL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,KAAK,CAACE,QAAQ,CAAC;gBACzD,CAAC,MAAM;kBACLL,OAAO,CAACC,GAAG,CAAE,+CAA8CG,QAAS,GAAE,CAAC;gBACzE;cACF,CAAC,CAAC;YACJ;YACA,OAAO;cACLE,MAAM,EAAEd,IAAI,CAACc,MAAM;cACnBC,IAAI,EAAE,IAAIC,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAACC,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;gBAAEC,QAAQ,EAAE,kBAAkB;gBAAEC,SAAS,EAAE,MAAM;gBAAEC,SAAS,EAAE;cAAO,CAAC,CAAC;cACrIC,IAAI,EAAEvB,IAAI,CAACiB,MAAM,CAACM,IAAI;cACtBjB,KAAK,EAAEN,IAAI,CAACM,KAAK;cACjBF,WAAW,EAAEA,WAAW;cACxBC,MAAM,EAAEA;YACV,CAAC;UACH,CAAC,CAAC;UACF9B,QAAQ,CAACoB,SAAS,CAAC;QACrB,CAAC,MAAM;UACLa,OAAO,CAAChC,KAAK,CAAC,2BAA2B,EAAEK,IAAI,CAACa,IAAI,CAAC;UACrD,MAAM,IAAI8B,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOhD,KAAK,EAAE;QACdgC,OAAO,CAAChC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,qBAAqB,CAAC;MACjC;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd6C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEnC,KAAK,CAAC;IAC1CA,KAAK,CAACoC,OAAO,CAAC,CAACV,IAAI,EAAEyB,KAAK,KAAK;MAC7BjB,OAAO,CAACC,GAAG,CAAE,SAAQgB,KAAM,IAAG,EAAEzB,IAAI,CAAC;MACrC,IAAIA,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,KAAK,IAAIP,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,EAAE;QAC7DG,OAAO,CAACC,GAAG,CAAE,8BAA6BgB,KAAM,IAAG,EAAEzB,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,CAAC;QAC7EL,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,CAACK,OAAO,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAK;UACnD,IAAID,KAAK,IAAIA,KAAK,CAACE,QAAQ,EAAE;YAC3BL,OAAO,CAACC,GAAG,CAAE,wBAAuBG,QAAS,QAAO,EAAED,KAAK,CAACE,QAAQ,CAAC;UACvE,CAAC,MAAM;YACLL,OAAO,CAACC,GAAG,CAAE,+CAA8CG,QAAS,GAAE,CAAC;UACzE;QACF,CAAC,CAAC;MACJ;MAEA,IAAIZ,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACW,MAAM,IAAIjB,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,IAAIjB,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACX,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACX,KAAK,CAACD,MAAM,EAAE;QAC1IG,OAAO,CAACC,GAAG,CAAE,4BAA2BgB,KAAM,IAAG,EAAEzB,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACX,KAAK,CAACD,MAAM,CAAC;QACzFL,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACX,KAAK,CAACD,MAAM,CAACK,OAAO,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAK;UACjE,IAAID,KAAK,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACe,GAAG,EAAE;YAC3ClB,OAAO,CAACC,GAAG,CAAE,sBAAqBG,QAAS,QAAO,EAAED,KAAK,CAACA,KAAK,CAACe,GAAG,CAAC,OAAO,CAAC,CAAC;UAC/E,CAAC,MAAM;YACLlB,OAAO,CAACC,GAAG,CAAE,6CAA4CG,QAAS,GAAE,CAAC;UACvE;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACtC,KAAK,CAAC,CAAC;EAEX,IAAIE,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAK2D,SAAS,EAAC,sBAAsB;MAAAC,QAAA,GAAC,iBAAe,EAACpD,KAAK;IAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3E;EAEA,oBACEhE,OAAA;IAAS2D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC5B5D,OAAA;MAAA4D,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhE,OAAA;MAAI2D,SAAS,EAAC,cAAc;MAAAC,QAAA,EAE3BtD,KAAK,CAACsB,GAAG,CAAC,CAACI,IAAI,EAAEyB,KAAK,KAAK;QAC1B;QACA,oBACEzD,OAAA;UAAA4D,QAAA,gBACE5D,OAAA;YAAG2D,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,YAAU,eAAA5D,OAAA;cAAGiE,IAAI,EAAG,4BAA2BjC,IAAI,CAACc,MAAM,CAAC9B,MAAO,EAAE;cAACkD,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,YAAY;cAAAP,QAAA,GAAC,GAAC,EAAC5B,IAAI,CAACc,MAAM,CAAC9B,MAAM;YAAA;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,QAAI,eAAAhE,OAAA;cAAA4D,QAAA,EAAI5B,IAAI,CAACe;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnLhE,OAAA;YAAK2D,SAAS,EAAC,YAAY;YAACS,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAW,CAAE;YAAAT,QAAA,GAC3DU,SAAS,CAACtC,IAAI,CAACuB,IAAI,CAAC,EACpBvB,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,KAAK,IAAIP,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,iBACtErC,OAAA;cAAK2D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC/B5B,IAAI,CAACM,KAAK,CAACC,KAAK,CAACF,MAAM,CAACT,GAAG,CAAC,CAACe,KAAK,EAAEC,QAAQ,kBAC3C5C,OAAA;gBAAoBuE,GAAG,EAAE5B,KAAK,CAACE,QAAS;gBAAC2B,GAAG,EAAE7B,KAAK,CAAC6B,GAAI;gBAACb,SAAS,EAAC;cAAkB,GAA3Ef,QAAQ;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAqE,CACxF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,EACchC,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACmC,QAAQ,IAAIzC,IAAI,CAACM,KAAK,CAACmC,QAAQ,CAACC,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC,iBAChF3E,OAAA;cAAK2D,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5B5D,OAAA,CAACF,OAAO;gBAAC8E,OAAO,EAAEC,gBAAgB,CAAC7C,IAAI,CAACM,KAAK,CAACmC,QAAQ,CAACC,GAAG;cAAE;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC/DhE,OAAA;gBAAA4D,QAAA,EAAK5B,IAAI,CAACM,KAAK,CAACmC,QAAQ,CAACK;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpChE,OAAA;gBAAG2D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAE5B,IAAI,CAACM,KAAK,CAACmC,QAAQ,CAACM;cAAW;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChE,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAELhC,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACW,MAAM,IAAIjB,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,iBAC1DjD,OAAA;YAAK2D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC5D,OAAA;cAAK2D,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B5D,OAAA;gBACE2D,SAAS,EAAC,aAAa;gBACvBY,GAAG,EAAEvC,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACH,MAAM,CAACkC,MAAO;gBAC5CR,GAAG,EAAG,aAAYxC,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACH,MAAM,CAAC9B,MAAO;cAAE;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC,eACFhE,OAAA;gBAAA4D,QAAA,GAAK,eAEH,eAAA5D,OAAA;kBAAA6D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNhE,OAAA;kBACE2D,SAAS,EAAC,gBAAgB;kBAC1BM,IAAI,EAAG,4BAA2BjC,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACH,MAAM,CAAC9B,MAAO,EAAE;kBAC3EkD,MAAM,EAAC,QAAQ;kBACfC,GAAG,EAAC,YAAY;kBAAAP,QAAA,GACjB,GACE,EAAC5B,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACH,MAAM,CAAC9B,MAAM;gBAAA;kBAAA6C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGNhE,OAAA;cAAK2D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC9B5B,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACgC,KAAK,CAAC1B;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,EAGLhC,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACgC,KAAK,CAAC3C,KAAK,CAACD,MAAM,iBAC1CrC,OAAA;cAAK2D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC/B5B,IAAI,CAACM,KAAK,CAACW,MAAM,CAACA,MAAM,CAACgC,KAAK,CAAC3C,KAAK,CAACD,MAAM,CAACT,GAAG,CAAC,CAACe,KAAK,EAAEC,QAAQ,kBAC/D5C,OAAA;gBAEE2D,SAAS,EAAC,kBAAkB;gBAC5BY,GAAG,EAAG,gJAAgJ;gBAACC,GAAG,EAAE7B,KAAK,CAAC6B;cAAI,GAFjK5B,QAAQ;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGd,CACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,eAGDhE,OAAA;YAAI2D,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAAC,eAAa,eAAA5D,OAAA;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,eAAAhE,OAAA;cAAM2D,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAE5B,IAAI,CAACI;YAAW;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GA/DrGP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgEV,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAAC9D,EAAA,CA3KID,aAAa;AAAAiF,EAAA,GAAbjF,aAAa;AA6KnB,MAAMkF,iBAAiB,GAAGA,CAACrE,GAAG,EAAEsE,OAAO,KAAK;EAC1C,OAAQ,iDAAgDtE,GAAI,IAAGsE,OAAQ,OAAM;AAC/E,CAAC;AAED,MAAMd,SAAS,GAAIf,IAAI,IAAK;EAC1B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;EACtB,MAAM8B,aAAa,GAAG,gCAAgC;EAEtD,OAAO9B,IAAI,CAAC+B,KAAK,CAACD,aAAa,CAAC,CAACzD,GAAG,CAAC,CAAC2D,IAAI,EAAE9B,KAAK,KAAK;IACpD,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MACnB,OAAO8B,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACL,oBAAOvF,OAAA;QAAGiE,IAAI,EAAG,4BAA2BsB,IAAK,EAAE;QAACrB,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,YAAY;QAAAP,QAAA,GAAC,GAAC,EAAC2B,IAAI;MAAA;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC,CAAC;IACpG;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMa,gBAAgB,GAAItB,IAAI,IAAK;EACjC,MAAMiC,OAAO,GAAGjC,IAAI,CAACkC,KAAK,CAAC,sBAAsB,CAAC;EAClD,OAAOD,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;AACpC,CAAC;AAED,eAAevF,aAAa;AAAC,IAAAiF,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}